@using tapeStream.Server.Data;
@using tapeStream.Server.Components;
@using System.Diagnostics;
@using System.Text;
@using Newtonsoft.Json.Linq;
@using Syncfusion.Blazor.Charts;
@using System.Globalization;
@* Page Header *@
<div class="flex-container">
    <img src="images/TickerTapeIcon.png" style="height:32px" />
    <h3 style="display:inline;margin-right:20px">
        <RadzenLink Text="TDA Streaming Hub" Path="https://developer.tdameritrade.com/content/streaming-data" target="_blank" />
    </h3>
    <br />
    <BSBadge IsPill="true" class="alert-primary" style="max-height:24px;position:relative;top:5px">@dateTimeNow</BSBadge>
    <BSBadge IsPill="true" class="alert-secondary" style="max-height:24px;position:relative;top:5px;">@elapsed</BSBadge>
</div>
@* Buttons *@
<div class="flex-container">
    <RadzenButton Text="Log In" ButtonStyle="ButtonStyle.Primary" Disabled="false" Click="Login" Size="Radzen.ButtonSize.Small" />
    <RadzenButton Text="Send" ButtonStyle="ButtonStyle.Success" Disabled="false" Click="Sends" Size="Radzen.ButtonSize.Small" />
    <RadzenButton Text="Log Out" ButtonStyle="ButtonStyle.Warning" Disabled="false" Click="Logout" Size="Radzen.ButtonSize.Small" />
    <RadzenButton Text="Request" ButtonStyle="ButtonStyle.Secondary" Disabled="false" Click="Requested" Size="Radzen.ButtonSize.Small" />
</div>
@* Feed Check List *@
<div class="flex-container" style="zoom:0.6">
    <RadzenCheckBoxList @bind-Value="values" TValue="int" Change="@((args) => Change(args, "CheckBoxList with horizontal orientation"))">
        <Items>
            <RadzenCheckBoxListItem Text="Listed Book" Value="1" />
            <RadzenCheckBoxListItem Text="Time & Sales" Value="2" />
            <RadzenCheckBoxListItem Text="Chart" Value="3" />

            <RadzenCheckBoxListItem Text="Quotes" Value="5" />
            <RadzenCheckBoxListItem Text="Actives" Value="6" />
            <RadzenCheckBoxListItem Text="Options" Value="4" />
        </Items>
    </RadzenCheckBoxList>
@* Configure Options Feed *@
    <RadzenAccordion Style="background-color:transparent;width:100%">
        <Items>
            <RadzenAccordionItem Text="Options" Icon="add_shopping_cart" Style="width:100%">
                <RadzenCard>
                    <div>
                        <RadzenLabel Text="Strike:" />
                        <RadzenNumeric Value="@strike" Max="1000" Min="200" Step="1" />
                        <br />
                        <RadzenLabel Text="Option Expiry:" />
                        <RadzenDatePicker Name="dtpExpiryDate" DateFormat="dddd MMM d, yyyy" Value="@optionExpDate" TValue="DateTime" />
                    </div>
                </RadzenCard>

            </RadzenAccordionItem>
        </Items>
    </RadzenAccordion>
</div>
@*Simulator Settings*@
<div class="flex-container">
    <RadzenAccordion Style="background-color:transparent;width:100%">
        <Items>
            <RadzenAccordionItem Text="Simulator" Icon="settings" Style="width:100%">
                <div style="width:600px;justify-content: center;">

                    <RadzenCard Style="width:600px;background-color:gainsboro">
                        <div class="grid2-container">
                            <h4 style="text-align:center;grid-column-end: span 2"> Simulator Settings</h4>
                            <span>Available Dates: </span><Radzen.Blazor.RadzenDropDown TValue="DateTime" />
                            <span>Start Time:  </span><Radzen.Blazor.RadzenDropDown TValue="DateTime" />
                            <span>End Time: </span><Radzen.Blazor.RadzenDropDown TValue="DateTime" />
                        </div>
                        <div class="flex-container;margin:20 auto">
                            <RadzenButton Text="Start" /><RadzenButton Text="Pause" /><RadzenButton Disabled="true" Text="Resume" /><RadzenButton Disabled="true" Text="Stop" />
                        </div>
                    </RadzenCard>
                </div>
            </RadzenAccordionItem>
        </Items>
    </RadzenAccordion>
</div>
@* Feed Display *@
<div class="grid-container">
    <RadzenCard>
        <div>
            <RadzenCheckBox @bind-Value="@logStreamer" TValue="bool?" Change="@(args => logStreamerChange(args, ""))" />
            <RadzenLabel Text="TDA Streamer" Style="margin-left: 5px;" Component="CheckBox3" />
            <BSBadge IsPill="true" class="alert-dark" title="Time elapsed since last data received">@sinceLastData</BSBadge>
            <BSBadge IsPill="true" class="@statusClass" style="max-height:24px;" title="TDA Streamer Connection Status">@status</BSBadge>
            <BSBadge IsPill="true" class="alert-black" style="max-height:24px;" title="@admCode">@admStatus</BSBadge>
            <RadzenTextArea Visible="@((bool)logStreamer)" Style="width:100%;height:100px;margin-top:10px;font:bold 8pt calibri" Value="@logText" />
        </div>
    </RadzenCard>

    @* Feed Counts *@
    <div>

        <HubMonitor logHub0="@logHub" clock="@clock" dictTopicCounts="@dictTopicCounts" logTopics="@logTopics" />

    </div>

</div>

<style>
        .grid2-container {
            display: grid;
            grid-template-columns: 200px auto;
            grid-row-gap: 10px;
            /*        background-color: #2196F3;
        */ padding: 10px;
        }

        .grid2-item {
            /*        background-color: rgba(255, 255, 255, 0.8);
                border: 1px solid rgba(0, 0, 0, 0.8);
        */
            padding: 20px;
            /*            font-size: 30px;
                text-align: center;
    */
        }
</style>

<style>

    .flex-container {
        display: flex;
        margin-bottom: 5px;
        zoom: 0.8;
    }

    .grid-container {
        display: grid;
        zoom: 0.8;
        grid-row-gap: 5px;
    }

    .badge {
        display: inline-block;
        padding: .5em .4em;
        font-size: 75%;
        /*        margin-right: 5px;
        */ font-weight: 700;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .25rem;
        transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }

    button, input {
        overflow: visible;
        margin-right: 10px;
    }

    body {
        margin: 0;
        font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
        font-size: 12pt;
        font-weight: 600;
        line-height: 1.5;
        color: #212529;
        text-align: left;
        background-color: #fff;
    }

    .ui-splitbutton .ui-button-text-icon-left, .ui-splitbutton .ui-button-text-only {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        padding: 0 0.625rem;
        display: none;
    }

    .ui-button-sm, .ui-fileupload .ui-button, .ui-fileupload .ui-paginator-element, .ui-paginator-element {
        zoom: 0.9;
    }
</style>
@code
{


}

