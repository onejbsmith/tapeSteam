// <auto-generated />
using tdaStreamHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace tdaStreamHub.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20200717041909_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("tdaStreamHub.Data.TDAOptionQuote", b =>
                {
                    b.Property<string>("symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("quoteTimeInLong")
                        .HasColumnType("bigint");

                    b.Property<float>("ask")
                        .HasColumnType("real");

                    b.Property<int>("askSize")
                        .HasColumnType("int");

                    b.Property<float>("bid")
                        .HasColumnType("real");

                    b.Property<string>("bidAskSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bidSize")
                        .HasColumnType("int");

                    b.Property<float>("breakeven")
                        .HasColumnType("real");

                    b.Property<float>("buyLongStrike")
                        .HasColumnType("real");

                    b.Property<string>("buyOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("closePrice")
                        .HasColumnType("real");

                    b.Property<float>("collateral")
                        .HasColumnType("real");

                    b.Property<int>("contracts")
                        .HasColumnType("int");

                    b.Property<float>("credit")
                        .HasColumnType("real");

                    b.Property<float>("daysToExpiration")
                        .HasColumnType("real");

                    b.Property<string>("deliverableNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("delta")
                        .HasColumnType("real");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exchangeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("expirationDate")
                        .HasColumnType("bigint");

                    b.Property<string>("expirationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("gamma")
                        .HasColumnType("real");

                    b.Property<float>("highPrice")
                        .HasColumnType("real");

                    b.Property<bool>("inTheMoney")
                        .HasColumnType("bit");

                    b.Property<int>("index")
                        .HasColumnType("int");

                    b.Property<bool>("isChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("isIndexOption")
                        .HasColumnType("bit");

                    b.Property<bool>("isManualContracts")
                        .HasColumnType("bit");

                    b.Property<float>("last")
                        .HasColumnType("real");

                    b.Property<int>("lastSize")
                        .HasColumnType("int");

                    b.Property<long>("lastTradingDay")
                        .HasColumnType("bigint");

                    b.Property<float>("lowPrice")
                        .HasColumnType("real");

                    b.Property<float>("mark")
                        .HasColumnType("real");

                    b.Property<float>("markChange")
                        .HasColumnType("real");

                    b.Property<float>("markPercentChange")
                        .HasColumnType("real");

                    b.Property<float>("maxLoss")
                        .HasColumnType("real");

                    b.Property<bool>("mini")
                        .HasColumnType("bit");

                    b.Property<float>("multiplier")
                        .HasColumnType("real");

                    b.Property<float>("netChange")
                        .HasColumnType("real");

                    b.Property<bool>("nonStandard")
                        .HasColumnType("bit");

                    b.Property<int>("openInterest")
                        .HasColumnType("int");

                    b.Property<float>("openPrice")
                        .HasColumnType("real");

                    b.Property<float>("percentChange")
                        .HasColumnType("real");

                    b.Property<float>("prem")
                        .HasColumnType("real");

                    b.Property<float>("prem2")
                        .HasColumnType("real");

                    b.Property<string>("putCall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("rho")
                        .HasColumnType("real");

                    b.Property<string>("settlementType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("strikePrice")
                        .HasColumnType("real");

                    b.Property<float>("theoreticalOptionValue")
                        .HasColumnType("real");

                    b.Property<float>("theoreticalVolatility")
                        .HasColumnType("real");

                    b.Property<float>("theta")
                        .HasColumnType("real");

                    b.Property<float>("timeValue")
                        .HasColumnType("real");

                    b.Property<int>("totalVolume")
                        .HasColumnType("int");

                    b.Property<long>("tradeDate")
                        .HasColumnType("bigint");

                    b.Property<long>("tradeTimeInLong")
                        .HasColumnType("bigint");

                    b.Property<float>("vega")
                        .HasColumnType("real");

                    b.Property<float>("volatility")
                        .HasColumnType("real");

                    b.HasKey("symbol", "quoteTimeInLong");

                    b.ToTable("TDAOptionQuotes");
                });
#pragma warning restore 612, 618
        }
    }
}
