"use strict";!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/modules/cylinder",["highcharts","highcharts/highcharts-3d"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){var t=e?e._modules:{};function r(e,t,r,n){e.hasOwnProperty(t)||(e[t]=n.apply(null,r))}r(t,"Series/CylinderSeries.js",[t["Core/Color/Color.js"],t["Core/Globals.js"],t["Extensions/Math3D.js"],t["Core/Series/Series.js"],t["Core/Utilities.js"]],function(e,t,r,n,s){function u(e){return!e.some(function(e){return"C"===e[0]})}var i=e.parse,p=t.charts,C=t.deg2rad,o=t.Renderer.prototype,g=r.perspective,h=s.merge,x=s.pick,a=o.cuboidPath;n.seriesType("cylinder","column",{},{},{shapeType:"cylinder",hasNewShapeType:t.seriesTypes.column.prototype.pointClass.prototype.hasNewShapeType});var c=h(o.elements3d.cuboid,{parts:["top","bottom","front","back"],pathType:"cylinder",fillSetter:function(e){return this.singleSetterForParts("fill",null,{front:e,back:e,top:i(e).brighten(.1).get(),bottom:i(e).brighten(-.1).get()}),this.color=this.fill=e,this}});o.elements3d.cylinder=c,o.cylinder=function(e){return this.element3d("cylinder",e)},o.cylinderPath=function(e){var t=this,r=p[t.chartIndex],n=a.call(t,e),s=!n.isTop,i=!n.isFront,o=t.getCylinderEnd(r,e),h=t.getCylinderEnd(r,e,!0);return{front:t.getCylinderFront(o,h),back:t.getCylinderBack(o,h),top:o,bottom:h,zIndexes:{top:s?3:0,bottom:s?0:3,front:i?2:1,back:i?1:2,group:n.zIndexes.group}}},o.getCylinderFront=function(e,t){var r,n,s,i=e.slice(0,3);return u(t)?"M"===(r=t[0])[0]&&(i.push(t[2]),i.push(t[1]),i.push(["L",r[1],r[2]])):(r=t[0],n=t[1],s=t[2],"M"===r[0]&&"C"===n[0]&&"C"===s[0]&&(i.push(["L",s[5],s[6]]),i.push(["C",s[3],s[4],s[1],s[2],n[5],n[6]]),i.push(["C",n[3],n[4],n[1],n[2],r[1],r[2]]))),i.push(["Z"]),i},o.getCylinderBack=function(e,t){var r,n,s,i,o,h=[];return u(e)?(n=e[0],r=e[2],"M"===n[0]&&"L"===r[0]&&(h.push(["M",r[1],r[2]]),h.push(e[3]),h.push(["L",n[1],n[2]]))):("C"===e[2][0]&&h.push(["M",e[2][5],e[2][6]]),h.push(e[3],e[4])),u(t)?"M"===(n=t[0])[0]&&(h.push(["L",n[1],n[2]]),h.push(t[3]),h.push(t[2])):(s=t[2],i=t[3],o=t[4],"C"===s[0]&&"C"===i[0]&&"C"===o[0]&&(h.push(["L",o[5],o[6]]),h.push(["C",o[3],o[4],o[1],o[2],i[5],i[6]]),h.push(["C",i[3],i[4],i[1],i[2],s[5],s[6]]))),h.push(["Z"]),h},o.getCylinderEnd=function(e,t,r){var n,s,i,o=x(t.depth,t.width),h=Math.min(t.width,o)/2,u=C*(e.options.chart.options3d.beta-90+(t.alphaCorrection||0)),p=t.y+(r?t.height:0),a=.5519*h,c=t.width/2+t.x,d=o/2+t.z,l=[{x:0,y:p,z:h},{x:a,y:p,z:h},{x:h,y:p,z:a},{x:h,y:p,z:0},{x:h,y:p,z:-a},{x:a,y:p,z:-h},{x:0,y:p,z:-h},{x:-a,y:p,z:-h},{x:-h,y:p,z:-a},{x:-h,y:p,z:0},{x:-h,y:p,z:a},{x:-a,y:p,z:h},{x:0,y:p,z:h}],y=Math.cos(u),f=Math.sin(u);return l.forEach(function(e,t){s=e.x,i=e.z,l[t].x=s*y-i*f+c,l[t].z=i*y+s*f+d}),n=g(l,e,!0),Math.abs(n[3].y-n[9].y)<2.5&&Math.abs(n[0].y-n[6].y)<2.5?this.toLinePath([n[0],n[3],n[6],n[9]],!0):this.getCurvedPath(n)},o.getCurvedPath=function(e){for(var t=[["M",e[0].x,e[0].y]],r=e.length-2,n=1;n<r;n+=3)t.push(["C",e[n].x,e[n].y,e[n+1].x,e[n+1].y,e[n+2].x,e[n+2].y]);return t}}),r(t,"masters/modules/cylinder.src.js",[],function(){})});