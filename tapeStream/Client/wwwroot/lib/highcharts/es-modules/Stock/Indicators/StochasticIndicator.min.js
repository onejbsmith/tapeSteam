import BaseSeries from"../../Core/Series/Series.js";import MultipleLinesMixin from"../../Mixins/MultipleLines.js";import ReduceArrayMixin from"../../Mixins/ReduceArray.js";import U from"../../Core/Utilities.js";var isArray=U.isArray,merge=U.merge,SMA=BaseSeries.seriesTypes.sma,getArrayExtremes=ReduceArrayMixin.getArrayExtremes;BaseSeries.seriesType("stochastic","sma",{params:{periods:[14,3]},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'},smoothedLine:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}},merge(MultipleLinesMixin,{nameComponents:["periods"],nameBase:"Stochastic",pointArrayMap:["y","smoothed"],parallelArrays:["x","y","smoothed"],pointValKey:"y",linesApiNames:["smoothedLine"],init:function(){SMA.prototype.init.apply(this,arguments),this.options=merge({smoothedLine:{styles:{lineColor:this.color}}},this.options)},getValues:function(e,i){var s,r,t,o,a,n=i.periods[0],p=i.periods[1],l=e.xData,m=e.yData,y=m?m.length:0,h=[],d=[],u=[],c=null;if(!(y<n)&&isArray(m[0])&&4===m[0].length){for(a=n-1;a<y;a++)s=m.slice(a-n+1,a+1),r=(o=getArrayExtremes(s,2,1))[0],t=(m[a][3]-r)/(o[1]-r)*100,d.push(l[a]),u.push([t,null]),a>=n-1+(p-1)&&(c=SMA.prototype.getValues.call(this,{xData:d.slice(-p),yData:u.slice(-p)},{period:p}).yData[0]),h.push([l[a],t,c]),u[u.length-1][1]=c;return{values:h,xData:d,yData:u}}}}));