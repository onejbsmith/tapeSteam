import BaseSeries from"../../Core/Series/Series.js";var seriesTypes=BaseSeries.seriesTypes;import MultipleLinesMixin from"../../Mixins/MultipleLines.js";import U from"../../Core/Utilities.js";var correctFloat=U.correctFloat,merge=U.merge,SMA=seriesTypes.sma,EMA=seriesTypes.ema,ATR=seriesTypes.atr;BaseSeries.seriesType("keltnerchannels","sma",{params:{period:20,periodATR:10,multiplierATR:2},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"},lineWidth:1},merge(MultipleLinesMixin,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Keltner Channels",nameComponents:["period","periodATR","multiplierATR"],linesApiNames:["topLine","bottomLine"],requiredIndicators:["ema","atr"],init:function(){SMA.prototype.init.apply(this,arguments),this.options=merge({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)},getValues:function(e,i){var o,t,r,s,p,n,l,a=i.period,m=i.periodATR,d=i.multiplierATR,u=i.index,y=e.yData,c=y?y.length:0,h=[],A=EMA.prototype.getValues(e,{period:a,index:u}),T=ATR.prototype.getValues(e,{period:m}),b=[],M=[];if(!(c<a)){for(l=a;l<=c;l++)p=A.values[l-a],n=T.values[l-m],s=p[0],t=correctFloat(p[1]+d*n[1]),r=correctFloat(p[1]-d*n[1]),o=p[1],h.push([s,t,o,r]),b.push(s),M.push([t,o,r]);return{values:h,xData:b,yData:M}}}}));