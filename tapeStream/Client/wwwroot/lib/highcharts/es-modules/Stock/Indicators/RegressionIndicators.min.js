import BaseSeries from"../../Core/Series/Series.js";import U from"../../Core/Utilities.js";var isArray=U.isArray;BaseSeries.seriesType("linearRegression","sma",{params:{xAxisUnit:void 0},tooltip:{valueDecimals:4}},{nameBase:"Linear Regression Indicator",getRegressionLineParameters:function(e,n){var r,s,t,i=this.options.params.index,a=function(e,n){return isArray(e)?e[n]:e},o=e.reduce(function(e,n){return n+e},0),l=n.reduce(function(e,n){return a(n,i)+e},0),p=o/e.length,u=l/n.length,g=0,c=0;for(s=0;s<e.length;s++)g+=(r=e[s]-p)*(a(n[s],i)-u),c+=Math.pow(r,2);return{slope:t=c?g/c:0,intercept:u-t*p}},getEndPointY:function(e,n){return e.slope*n+e.intercept},transformXData:function(e,n){var r=e[0];return e.map(function(e){return(e-r)/n})},findClosestDistance:function(e){var n,r,s;for(s=1;s<e.length-1;s++)(n=e[s]-e[s-1])>0&&(void 0===r||n<r)&&(r=n);return r},getValues:function(e,n){var r,s,t,i,a,o,l,p,u,g=e.xData,c=e.yData,f=n.period,m={xData:[],yData:[],values:[]},h=this.options.params.xAxisUnit||this.findClosestDistance(g);for(s=f-1;s<=g.length-1;s++)t=s-f+1,i=s+1,a=g[s],l=g.slice(t,i),p=c.slice(t,i),u=this.transformXData(l,h),r=this.getRegressionLineParameters(u,p),o=this.getEndPointY(r,u[u.length-1]),m.values.push({regressionLineParameters:r,x:a,y:o}),m.xData.push(a),m.yData.push(o);return m}}),BaseSeries.seriesType("linearRegressionSlope","linearRegression",{},{nameBase:"Linear Regression Slope Indicator",getEndPointY:function(e){return e.slope}}),BaseSeries.seriesType("linearRegressionIntercept","linearRegression",{},{nameBase:"Linear Regression Intercept Indicator",getEndPointY:function(e){return e.intercept}}),BaseSeries.seriesType("linearRegressionAngle","linearRegression",{tooltip:{pointFormat:'<span style="color:{point.color}">●</span>{series.name}: <b>{point.y}°</b><br/>'}},{nameBase:"Linear Regression Angle Indicator",slopeToAngle:function(e){return Math.atan(e)*(180/Math.PI)},getEndPointY:function(e){return this.slopeToAngle(e.slope)}});