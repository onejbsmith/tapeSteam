"use strict";import U from"../Utilities.js";var TreeGridTick,addEvent=U.addEvent,defined=U.defined,isObject=U.isObject,isNumber=U.isNumber,pick=U.pick,wrap=U.wrap;!function(e){var t=!1;function r(){this.treeGrid||(this.treeGrid=new s(this))}function i(e,t,r,i,o,s,d,n,a){var l,p,c,h,f,u=pick(this.options&&this.options.labels,s),y=this.pos,G=this.axis,m="treegrid"===G.options.type,g=e.apply(this,[t,r,i,o,u,d,n,a]);return m&&(l=u&&isObject(u.symbol,!0)?u.symbol:{},p=u&&isNumber(u.indentation)?u.indentation:0,f=(h=(c=G.treeGrid.mapOfPosToGridNode)&&c[y])&&h.depth||1,g.x+=l.width+2*l.padding+(f-1)*p),g}function o(e){var t,r,i,o=this,s=o.pos,d=o.axis,n=o.label,a=d.treeGrid.mapOfPosToGridNode,l=d.options,p=pick(o.options&&o.options.labels,l&&l.labels),c=p&&isObject(p.symbol,!0)?p.symbol:{},h=a&&a[s],f=h&&h.depth,u="treegrid"===l.type,y=d.tickPositions.indexOf(s)>-1,G=d.chart.styledMode;u&&h&&n&&n.element&&n.addClass("highcharts-treegrid-node-level-"+f),e.apply(o,Array.prototype.slice.call(arguments,1)),u&&n&&n.element&&h&&h.descendants&&h.descendants>0&&(t=d.treeGrid.isCollapsed(h),function(e,t){var r=e.treeGrid,i=!r.labelIcon,o=t.renderer,s=t.xy,d=t.options,n=d.width,a=d.height,l={x:s.x-n/2-d.padding,y:s.y-a/2},p=t.collapsed?90:180,c=t.show&&isNumber(l.y),h=r.labelIcon;h||(r.labelIcon=h=o.path(o.symbols[d.type](d.x,d.y,n,a)).addClass("highcharts-label-icon").add(t.group)),c||h.attr({y:-9999}),o.styledMode||h.attr({"stroke-width":1,fill:pick(t.color,"#666666")}).css({cursor:"pointer",stroke:d.lineColor,strokeWidth:d.lineWidth}),h[i?"attr":"animate"]({translateX:l.x,translateY:l.y,rotation:p})}(o,{color:!G&&n.styles&&n.styles.color||"",collapsed:t,group:n.parentGroup,options:c,renderer:n.renderer,show:y,xy:n.xy}),r="highcharts-treegrid-node-"+(t?"collapsed":"expanded"),i="highcharts-treegrid-node-"+(t?"expanded":"collapsed"),n.addClass(r).removeClass(i),G||n.css({cursor:"pointer"}),[n,o.treeGrid.labelIcon].forEach(function(e){e&&!e.attachedTreeGridEvents&&(addEvent(e.element,"mouseover",function(){!function(e){e.addClass("highcharts-treegrid-node-active"),e.renderer.styledMode||e.css({textDecoration:"underline"})}(n)}),addEvent(e.element,"mouseout",function(){!function(e,t){var r=defined(t.style)?t.style:{};e.removeClass("highcharts-treegrid-node-active"),e.renderer.styledMode||e.css({textDecoration:r.textDecoration})}(n,p)}),addEvent(e.element,"click",function(){o.treeGrid.toggleCollapse()}),e.attachedTreeGridEvents=!0)}))}e.compose=function(e){t||(addEvent(e,"init",r),wrap(e.prototype,"getLabelPosition",i),wrap(e.prototype,"renderLabel",o),e.prototype.collapse=function(e){this.treeGrid.collapse(e)},e.prototype.expand=function(e){this.treeGrid.expand(e)},e.prototype.toggleCollapse=function(e){this.treeGrid.toggleCollapse(e)},t=!0)};var s=function(){function e(e){this.tick=e}return e.prototype.collapse=function(e){var t=this.tick,r=t.axis,i=r.brokenAxis;if(i&&r.treeGrid.mapOfPosToGridNode){var o=t.pos,s=r.treeGrid.mapOfPosToGridNode[o],d=r.treeGrid.collapse(s);i.setBreaks(d,pick(e,!0))}},e.prototype.expand=function(e){var t=this.tick,r=t.axis,i=r.brokenAxis;if(i&&r.treeGrid.mapOfPosToGridNode){var o=t.pos,s=r.treeGrid.mapOfPosToGridNode[o],d=r.treeGrid.expand(s);i.setBreaks(d,pick(e,!0))}},e.prototype.toggleCollapse=function(e){var t=this.tick,r=t.axis,i=r.brokenAxis;if(i&&r.treeGrid.mapOfPosToGridNode){var o=t.pos,s=r.treeGrid.mapOfPosToGridNode[o],d=r.treeGrid.toggleCollapse(s);i.setBreaks(d,pick(e,!0))}},e}();e.Additions=s}(TreeGridTick||(TreeGridTick={}));export default TreeGridTick;