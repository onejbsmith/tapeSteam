import H from"../Globals.js";import Axis from"./Axis.js";import Tick from"./Tick.js";import Tree from"../../Gantt/Tree.js";import TreeGridTick from"./TreeGridTick.js";import mixinTreeSeries from"../../Mixins/TreeSeries.js";var getLevelOptions=mixinTreeSeries.getLevelOptions;import U from"../Utilities.js";var TreeGridAxis,addEvent=U.addEvent,find=U.find,fireEvent=U.fireEvent,isArray=U.isArray,isNumber=U.isNumber,isObject=U.isObject,isString=U.isString,merge=U.merge,pick=U.pick,wrap=U.wrap;import"./GridAxis.js";import"./BrokenAxis.js";!function(e){var t=!1;function i(e,t){var i=e.collapseStart||0,r=e.collapseEnd||0;return r>=t&&(i-=.5),{from:i,to:r,showPoints:!1}}function r(e,t,i){var r,o=[],s=[],a={},n={},d=-1,p="boolean"==typeof t&&t,l={after:function(e){var t=n[e.pos],i=0,r=0;t.children.forEach(function(e){r+=(e.descendants||0)+1,i=Math.max((e.height||0)+1,i)}),t.descendants=r,t.height=i,t.collapsed&&s.push(t)},before:function(e){var t,i,r=isObject(e.data,!0)?e.data:{},s=isString(r.name)?r.name:"",l=a[e.parent],c=isObject(l,!0)?n[l.pos]:null;p&&isObject(c,!0)&&(t=find(c.children,function(e){return e.name===s}))?(i=t.pos,t.nodes.push(e)):i=d++,n[i]||(n[i]=t={depth:c?c.depth+1:0,name:s,id:r.id,nodes:[e],children:[],pos:i},-1!==i&&o.push(s),isObject(c,!0)&&c.children.push(t)),isString(e.id)&&(a[e.id]=e),t&&!0===r.collapsed&&(t.collapsed=!0),e.pos=i}};return r=Tree.getTree(e,l),n=function(e,t){var i=function(e,r,o){var s=e.nodes,a=r+(-1===r?0:t-1),n=(a-r)/2,d=r+n;return s.forEach(function(e){var t=e.data;isObject(t,!0)&&(t.y=r+(t.seriesIndex||0),delete t.seriesIndex),e.pos=d}),o[d]=e,e.pos=d,e.tickmarkOffset=n+.5,e.collapseStart=a+.5,e.children.forEach(function(e){i(e,a+1,o),a=(e.collapseEnd||0)-.5}),e.collapseEnd=a+.5,o};return i(e[-1],-1,{})}(n,i),{categories:o,mapOfIdToNode:a,mapOfPosToGridNode:n,collapsedNodes:s,tree:r}}function o(e){e.target.axes.filter(function(e){return"treegrid"===e.options.type}).forEach(function(t){var i,o,s=t.options||{},a=s.labels,n=s.uniqueNames,d=0,p=s.max;if(!t.treeGrid.mapOfPosToGridNode||t.series.some(function(e){return!e.hasRendered||e.isDirtyData||e.isDirty})){if(i=t.series.reduce(function(e,t){return t.visible&&((t.options.data||[]).forEach(function(i){t.options.keys&&t.options.keys.length&&(i=t.pointClass.prototype.optionsToObject.call({series:t},i),H.seriesTypes.gantt.prototype.setGanttPointAliases(i)),isObject(i,!0)&&(i.seriesIndex=d,e.push(i))}),!0===n&&d++),e},[]),p&&i.length<p)for(var l=i.length;l<=p;l++)i.push({name:l+"â€‹"});o=r(i,n||!1,!0===n?d:1),t.categories=o.categories,t.treeGrid.mapOfPosToGridNode=o.mapOfPosToGridNode,t.hasNames=!0,t.treeGrid.tree=o.tree,t.series.forEach(function(e){var t=(e.options.data||[]).map(function(t){return isArray(t)&&e.options.keys&&e.options.keys.length&&i.forEach(function(e){t.indexOf(e.x)>=0&&t.indexOf(e.x2)>=0&&(t=e)}),isObject(t,!0)?merge(t):t});e.visible&&e.setData(t,!1)}),t.treeGrid.mapOptionsToLevel=getLevelOptions({defaults:a,from:1,levels:a&&a.levels,to:t.treeGrid.tree&&t.treeGrid.tree.height}),"beforeRender"===e.type&&(t.treeGrid.collapsedNodes=o.collapsedNodes)}})}function s(e,t){var i,r,o,s=this.treeGrid.mapOptionsToLevel||{},a="treegrid"===this.options.type,n=this.ticks,d=n[t];a&&this.treeGrid.mapOfPosToGridNode?((i=s[(o=this.treeGrid.mapOfPosToGridNode[t]).depth])&&(r={labels:i}),d?(d.parameters.category=o.name,d.options=r,d.addLabel()):n[t]=d=new Tick(this,t,void 0,void 0,{category:o.name,tickmarkOffset:o.tickmarkOffset,options:r})):e.apply(this,Array.prototype.slice.call(arguments,1))}function a(e){var t,i=this.options,r=i&&i.labels,o=r&&isNumber(r.indentation)?r.indentation:0,s=e.apply(this,Array.prototype.slice.call(arguments,1));return"treegrid"===this.options.type&&this.treeGrid.mapOfPosToGridNode&&(t=this.treeGrid.mapOfPosToGridNode[-1].height||0,s.width+=o*(t-1)),s}function n(e,t,i){var s=this,a="treegrid"===i.type;s.treeGrid||(s.treeGrid=new p(s)),a&&(addEvent(t,"beforeRender",o),addEvent(t,"beforeRedraw",o),addEvent(t,"addSeries",function(e){if(e.options.data){var t=r(e.options.data,i.uniqueNames||!1,1);s.treeGrid.collapsedNodes=(s.treeGrid.collapsedNodes||[]).concat(t.collapsedNodes)}}),addEvent(s,"foundExtremes",function(){s.treeGrid.collapsedNodes&&s.treeGrid.collapsedNodes.forEach(function(e){var t=s.treeGrid.collapse(e);s.brokenAxis&&(s.brokenAxis.setBreaks(t,!1),s.treeGrid.collapsedNodes&&(s.treeGrid.collapsedNodes=s.treeGrid.collapsedNodes.filter(function(t){return e.collapseStart!==t.collapseStart||e.collapseEnd!==t.collapseEnd})))})}),addEvent(s,"afterBreaks",function(){var e;"yAxis"===s.coll&&!s.staticScale&&(null===(e=s.chart.options.chart)||void 0===e?void 0:e.height)&&(s.isDirty=!0)}),i=merge({grid:{enabled:!0},labels:{align:"left",levels:[{level:void 0},{level:1,style:{fontWeight:"bold"}}],symbol:{type:"triangle",x:-5,y:-5,height:10,width:10,padding:5}},uniqueNames:!1},i,{reversed:!0,grid:{columns:void 0}})),e.apply(s,[t,i]),a&&(s.hasNames=!0,s.options.showLastLabel=!0)}function d(e){var t=this.options;"treegrid"===t.type?(this.min=pick(this.userMin,t.min,this.dataMin),this.max=pick(this.userMax,t.max,this.dataMax),fireEvent(this,"foundExtremes"),this.setAxisTranslation(!0),this.tickmarkOffset=.5,this.tickInterval=1,this.tickPositions=this.treeGrid.mapOfPosToGridNode?this.treeGrid.getTickPositions():[]):e.apply(this,Array.prototype.slice.call(arguments,1))}e.compose=function(e){t||(wrap(e.prototype,"generateTick",s),wrap(e.prototype,"getMaxLabelDimensions",a),wrap(e.prototype,"init",n),wrap(e.prototype,"setTickInterval",d),TreeGridTick.compose(Tick),t=!0)};var p=function(){function e(e){this.axis=e}return e.prototype.setCollapsedStatus=function(e){var t=this.axis,i=t.chart;t.series.forEach(function(t){var r=t.options.data;if(e.id&&r){var o=i.get(e.id),s=r[t.data.indexOf(o)];o&&s&&(o.collapsed=e.collapsed,s.collapsed=e.collapsed)}})},e.prototype.collapse=function(e){var t=this.axis,r=t.options.breaks||[],o=i(e,t.max);return r.push(o),e.collapsed=!0,t.treeGrid.setCollapsedStatus(e),r},e.prototype.expand=function(e){var t=this.axis,r=t.options.breaks||[],o=i(e,t.max);return e.collapsed=!1,t.treeGrid.setCollapsedStatus(e),r.reduce(function(e,t){return t.to===o.to&&t.from===o.from||e.push(t),e},[])},e.prototype.getTickPositions=function(){var e=this.axis,t=Math.floor(e.min/e.tickInterval)*e.tickInterval,i=Math.ceil(e.max/e.tickInterval)*e.tickInterval;return Object.keys(e.treeGrid.mapOfPosToGridNode||{}).reduce(function(r,o){var s=+o;return!(s>=t&&s<=i)||e.brokenAxis&&e.brokenAxis.isInAnyBreak(s)||r.push(s),r},[])},e.prototype.isCollapsed=function(e){var t=this.axis,r=t.options.breaks||[],o=i(e,t.max);return r.some(function(e){return e.from===o.from&&e.to===o.to})},e.prototype.toggleCollapse=function(e){return this.isCollapsed(e)?this.expand(e):this.collapse(e)},e}();e.Additions=p}(TreeGridAxis||(TreeGridAxis={})),Axis.prototype.utils={getNode:Tree.getNode},TreeGridAxis.compose(Axis);export default TreeGridAxis;