import H from"../Core/Globals.js";import U from"../Core/Utilities.js";var find=U.find,isArray=U.isArray,isNumber=U.isNumber,deg2rad=H.deg2rad,correctFloat=function(o,t){var r=isNumber(t)?t:14,n=Math.pow(10,r);return Math.round(o*n)/n},getNormals=function(o,t){var r=t[0]-o[0],n=t[1]-o[1];return[[-n,r],[n,-r]]},dotProduct=function(o,t){var r=o[0],n=o[1];return r*t[0]+n*t[1]},project=function(o,t){var r=o.map(function(o){return dotProduct(o,t)});return{min:Math.min.apply(this,r),max:Math.max.apply(this,r)}},rotate2DToOrigin=function(o,t){var r=o[0],n=o[1],e=deg2rad*-t,i=Math.cos(e),a=Math.sin(e);return[correctFloat(r*i-n*a),correctFloat(r*a+n*i)]},rotate2DToPoint=function(o,t,r){var n=o[0]-t[0],e=o[1]-t[1],i=rotate2DToOrigin([n,e],r);return[i[0]+t[0],i[1]+t[1]]},isAxesEqual=function(o,t){return o[0]===t[0]&&o[1]===t[1]},getAxesFromPolygon=function(o){var t=o.axes;return isArray(t)||(t=[],o.concat([o[0]]).reduce(function(o,r){var n=getNormals(o,r)[0];return find(t,function(o){return isAxesEqual(o,n)})||t.push(n),r}),o.axes=t),t},getAxes=function(o,t){var r=getAxesFromPolygon(o),n=getAxesFromPolygon(t);return r.concat(n)},getPolygon=function(o,t,r,n,e){var i=[o,t],a=o-r/2,u=o+r/2,g=t-n/2,l=t+n/2;return[[a,g],[u,g],[u,l],[a,l]].map(function(o){return rotate2DToPoint(o,i,-e)})},getBoundingBoxFromPolygon=function(o){return o.reduce(function(o,t){var r=t[0],n=t[1];return o.left=Math.min(r,o.left),o.right=Math.max(r,o.right),o.bottom=Math.max(n,o.bottom),o.top=Math.min(n,o.top),o},{left:Number.MAX_VALUE,right:-Number.MAX_VALUE,bottom:-Number.MAX_VALUE,top:Number.MAX_VALUE})},isPolygonsOverlappingOnAxis=function(o,t,r){var n=project(t,o),e=project(r,o);return!!(e.min>n.max||e.max<n.min)},isPolygonsColliding=function(o,t){var r=getAxes(o,t);return!find(r,function(r){return isPolygonsOverlappingOnAxis(r,o,t)})},movePolygon=function(o,t,r){return r.map(function(r){return[r[0]+o,r[1]+t]})},collision={getBoundingBoxFromPolygon:getBoundingBoxFromPolygon,getPolygon:getPolygon,isPolygonsColliding:isPolygonsColliding,movePolygon:movePolygon,rotate2DToOrigin:rotate2DToOrigin,rotate2DToPoint:rotate2DToPoint};export default collision;