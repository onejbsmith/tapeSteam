"use strict";var __extends=this&&this.__extends||function(){var t=function(o,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var n in o)o.hasOwnProperty(n)&&(t[n]=o[n])})(o,n)};return function(o,n){function i(){this.constructor=o}t(o,n),o.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();import Annotation from"../Annotations.js";import ControlPoint from"../ControlPoint.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";var merge=U.merge,CrookedLine=function(t){function o(o,n){return t.call(this,o,n)||this}return __extends(o,t),o.prototype.setClipAxes=function(){this.clipXAxis=this.chart.xAxis[this.options.typeOptions.xAxis],this.clipYAxis=this.chart.yAxis[this.options.typeOptions.yAxis]},o.prototype.getPointsOptions=function(){var t=this.options.typeOptions;return(t.points||[]).map(function(o){return o.xAxis=t.xAxis,o.yAxis=t.yAxis,o})},o.prototype.getControlPointsOptions=function(){return this.getPointsOptions()},o.prototype.addControlPoints=function(){this.getControlPointsOptions().forEach(function(t,o){var n=new ControlPoint(this.chart,this,merge(this.options.controlPointOptions,t.controlPoint),o);this.controlPoints.push(n),t.controlPoint=n.options},this)},o.prototype.addShapes=function(){var t=this.options.typeOptions,o=this.initShape(merge(t.line,{type:"path",points:this.points.map(function(t,o){return function(t){return t.annotation.points[o]}})}),!1);t.line=o.options},o}(Annotation);CrookedLine.prototype.defaultOptions=merge(Annotation.prototype.defaultOptions,{typeOptions:{xAxis:0,yAxis:0,line:{fill:"none"}},controlPointOptions:{positioner:function(t){var o=this.graphic,n=MockPoint.pointToPixels(t.points[this.index]);return{x:n.x-o.width/2,y:n.y-o.height/2}},events:{drag:function(t,o){if(o.chart.isInsidePlot(t.chartX-o.chart.plotLeft,t.chartY-o.chart.plotTop)){var n=this.mouseMoveToTranslation(t);o.translatePoint(n.x,n.y,this.index),o.options.typeOptions.points[this.index].x=o.points[this.index].x,o.options.typeOptions.points[this.index].y=o.points[this.index].y,o.redraw(!1)}}}}}),Annotation.types.crookedLine=CrookedLine;export default CrookedLine;