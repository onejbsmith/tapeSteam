"use strict";var __extends=this&&this.__extends||function(){var t=function(o,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var n in o)o.hasOwnProperty(n)&&(t[n]=o[n])})(o,n)};return function(o,n){function e(){this.constructor=o}t(o,n),o.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}}();import Annotation from"../Annotations.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";var merge=U.merge,VerticalLine=function(t){function o(o,n){return t.call(this,o,n)||this}return __extends(o,t),o.connectorFirstPoint=function(t){var o=t.annotation,n=o.points[0],e=MockPoint.pointToPixels(n,!0),i=e.y,r=o.options.typeOptions.label.offset;return o.chart.inverted&&(i=e.x),{x:n.x,xAxis:n.series.xAxis,y:i+r}},o.connectorSecondPoint=function(t){var o=t.annotation,n=o.options.typeOptions,e=o.points[0],i=n.yOffset,r=MockPoint.pointToPixels(e,!0)[o.chart.inverted?"x":"y"];return n.label.offset<0&&(i*=-1),{x:e.x,xAxis:e.series.xAxis,y:r+i}},o.prototype.getPointsOptions=function(){return[this.options.typeOptions.point]},o.prototype.addShapes=function(){var t=this.options.typeOptions,n=this.initShape(merge(t.connector,{type:"path",points:[o.connectorFirstPoint,o.connectorSecondPoint]}),!1);t.connector=n.options},o.prototype.addLabels=function(){var t=this.options.typeOptions,o=t.label,n=0,e=o.offset,i=o.offset<0?"bottom":"top",r="center";this.chart.inverted&&(n=o.offset,e=0,i="middle",r=o.offset<0?"right":"left");var s=this.initLabel(merge(o,{verticalAlign:i,align:r,x:n,y:e}));t.label=s.options},o}(Annotation);VerticalLine.prototype.defaultOptions=merge(Annotation.prototype.defaultOptions,{typeOptions:{yOffset:10,label:{offset:-40,point:function(t){return t.annotation.points[0]},allowOverlap:!0,backgroundColor:"none",borderWidth:0,crop:!0,overflow:"none",shape:"rect",text:"{y:.2f}"},connector:{strokeWidth:1,markerEnd:"arrow"}}}),Annotation.types.verticalLine=VerticalLine;export default VerticalLine;