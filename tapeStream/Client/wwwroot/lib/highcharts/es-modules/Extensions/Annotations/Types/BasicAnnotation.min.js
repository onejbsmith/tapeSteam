"use strict";var __extends=this&&this.__extends||function(){var t=function(o,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var n in o)o.hasOwnProperty(n)&&(t[n]=o[n])})(o,n)};return function(o,n){function i(){this.constructor=o}t(o,n),o.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();import Annotation from"../Annotations.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";var merge=U.merge,BasicAnnotation=function(t){function o(o,n){return t.call(this,o,n)||this}return __extends(o,t),o.prototype.addControlPoints=function(){var t=this.options,n=o.basicControlPoints,i=this.basicType;(t.labels||t.shapes).forEach(function(t){t.controlPoints=n[i]})},o.prototype.init=function(){var t=this.options;t.shapes?(delete t.labelOptions,"circle"===t.shapes[0].type?this.basicType="circle":this.basicType="rectangle"):(delete t.shapes,this.basicType="label"),Annotation.prototype.init.apply(this,arguments)},o.basicControlPoints={label:[{symbol:"triangle-down",positioner:function(t){if(!t.graphic.placed)return{x:0,y:-9e7};var o=MockPoint.pointToPixels(t.points[0]);return{x:o.x-this.graphic.width/2,y:o.y-this.graphic.height/2}},events:{drag:function(t,o){var n=this.mouseMoveToTranslation(t);o.translatePoint(n.x,n.y),o.annotation.userOptions.labels[0].point=o.options.point,o.redraw(!1)}}},{symbol:"square",positioner:function(t){return t.graphic.placed?{x:t.graphic.alignAttr.x-this.graphic.width/2,y:t.graphic.alignAttr.y-this.graphic.height/2}:{x:0,y:-9e7}},events:{drag:function(t,o){var n=this.mouseMoveToTranslation(t);o.translate(n.x,n.y),o.annotation.userOptions.labels[0].point=o.options.point,o.redraw(!1)}}}],rectangle:[{positioner:function(t){var o=MockPoint.pointToPixels(t.points[2]);return{x:o.x-4,y:o.y-4}},events:{drag:function(t,o){var n=o.annotation,i=this.chart.pointer.getCoordinates(t),s=i.xAxis[0].value,e=i.yAxis[0].value,r=o.options.points;r[1].x=s,r[2].x=s,r[2].y=e,r[3].y=e,n.userOptions.shapes[0].points=o.options.points,n.redraw(!1)}}}],circle:[{positioner:function(t){var o=MockPoint.pointToPixels(t.points[0]),n=t.options.r;return{x:o.x+n*Math.cos(Math.PI/4)-this.graphic.width/2,y:o.y+n*Math.sin(Math.PI/4)-this.graphic.height/2}},events:{drag:function(t,o){var n=o.annotation,i=this.mouseMoveToTranslation(t);o.setRadius(Math.max(o.options.r+i.y/Math.sin(Math.PI/4),5)),n.userOptions.shapes[0].r=o.options.r,n.userOptions.shapes[0].point=o.options.point,o.redraw(!1)}}}]},o}(Annotation);BasicAnnotation.prototype.defaultOptions=merge(Annotation.prototype.defaultOptions,{}),Annotation.types.basicAnnotation=BasicAnnotation;export default BasicAnnotation;