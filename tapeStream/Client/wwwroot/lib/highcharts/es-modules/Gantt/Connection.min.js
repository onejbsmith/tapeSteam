"use strict";import H from"../Core/Globals.js";import O from"../Core/Options.js";var defaultOptions=O.defaultOptions;import Point from"../Core/Series/Point.js";import U from"../Core/Utilities.js";var addEvent=U.addEvent,defined=U.defined,error=U.error,extend=U.extend,merge=U.merge,objectEach=U.objectEach,pick=U.pick,splat=U.splat;import"../Extensions/ArrowSymbols.js";var deg2rad=H.deg2rad,max=Math.max,min=Math.min;function getPointBB(t){var i,r=t.shapeArgs;return r?{xMin:r.x,xMax:r.x+r.width,yMin:r.y,yMax:r.y+r.height}:(i=t.graphic&&t.graphic.getBBox())?{xMin:t.plotX-i.width/2,xMax:t.plotX+i.width/2,yMin:t.plotY-i.height/2,yMax:t.plotY+i.height/2}:null}function calculateObstacleMargin(t){for(var i,r,e=t.length,o=0,a=[],n=function(t,i,r){var e=pick(r,10),o=t.yMax+e>i.yMin-e&&t.yMin-e<i.yMax+e,a=t.xMax+e>i.xMin-e&&t.xMin-e<i.xMax+e,s=o?t.xMin>i.xMax?t.xMin-i.xMax:i.xMin-t.xMax:1/0,h=a?t.yMin>i.yMax?t.yMin-i.yMax:i.yMin-t.yMax:1/0;return a&&o?e?n(t,i,Math.floor(e/2)):1/0:min(s,h)};o<e;++o)for(i=o+1;i<e;++i)(r=n(t[o],t[i]))<80&&a.push(r);return a.push(80),max(Math.floor(a.sort(function(t,i){return t-i})[Math.floor(a.length/10)]/2-1),1)}extend(defaultOptions,{connectors:{type:"straight",lineWidth:1,marker:{enabled:!1,align:"center",verticalAlign:"middle",inside:!1,lineWidth:1},startMarker:{symbol:"diamond"},endMarker:{symbol:"arrow-filled"}}});var Connection=function(){function t(t,i,r){this.chart=void 0,this.fromPoint=void 0,this.graphics=void 0,this.pathfinder=void 0,this.toPoint=void 0,this.init(t,i,r)}return t.prototype.init=function(t,i,r){this.fromPoint=t,this.toPoint=i,this.options=r,this.chart=t.series.chart,this.pathfinder=this.chart.pathfinder},t.prototype.renderPath=function(t,i,r){var e,o=this.chart,a=o.styledMode,n=o.pathfinder,s=!o.options.chart.forExport&&!1!==r,h=this.graphics&&this.graphics.path;n.group||(n.group=o.renderer.g().addClass("highcharts-pathfinder-group").attr({zIndex:-1}).add(o.seriesGroup)),n.group.translate(o.plotLeft,o.plotTop),h&&h.renderer||(h=o.renderer.path().add(n.group),a||h.attr({opacity:0})),h.attr(i),e={d:t},a||(e.opacity=1),h[s?"animate":"attr"](e,r),this.graphics=this.graphics||{},this.graphics.path=h},t.prototype.addMarker=function(t,i,r){var e,o,a,n,s,h,c,d,p=this.fromPoint.series.chart,l=p.pathfinder,g=p.renderer,M="start"===t?this.fromPoint:this.toPoint,x=M.getPathfinderAnchorPoint(i);i.enabled&&((d="start"===t?r[1]:r[r.length-2])&&"M"===d[0]||"L"===d[0])&&(c={x:d[1],y:d[2]},o=M.getRadiansToVector(c,x),e=M.getMarkerVector(o,i.radius,x),a=-o/deg2rad,i.width&&i.height?(s=i.width,h=i.height):s=h=2*i.radius,this.graphics=this.graphics||{},n={x:e.x-s/2,y:e.y-h/2,width:s,height:h,rotation:a,rotationOriginX:e.x,rotationOriginY:e.y},this.graphics[t]?this.graphics[t].animate(n):(this.graphics[t]=g.symbol(i.symbol).addClass("highcharts-point-connecting-path-"+t+"-marker").attr(n).add(l.group),g.styledMode||this.graphics[t].attr({fill:i.color||this.fromPoint.color,stroke:i.lineColor,"stroke-width":i.lineWidth,opacity:0}).animate({opacity:1},M.series.options.animation)))},t.prototype.getPath=function(t){var i=this.pathfinder,r=this.chart,e=i.algorithms[t.type],o=i.chartObstacles;return"function"!=typeof e?(error('"'+t.type+'" is not a Pathfinder algorithm.'),{path:[],obstacles:[]}):(e.requiresObstacles&&!o&&(o=i.chartObstacles=i.getChartObstacles(t),r.options.connectors.algorithmMargin=t.algorithmMargin,i.chartObstacleMetrics=i.getObstacleMetrics(o)),e(this.fromPoint.getPathfinderAnchorPoint(t.startMarker),this.toPoint.getPathfinderAnchorPoint(t.endMarker),merge({chartObstacles:o,lineObstacles:i.lineObstacles||[],obstacleMetrics:i.chartObstacleMetrics,hardBounds:{xMin:0,xMax:r.plotWidth,yMin:0,yMax:r.plotHeight},obstacleOptions:{margin:t.algorithmMargin},startDirectionX:i.getAlgorithmStartDirection(t.startMarker)},t)))},t.prototype.render=function(){var t,i,r=this.fromPoint,e=r.series,o=e.chart,a=o.pathfinder,n=merge(o.options.connectors,e.options.connectors,r.options.connectors,this.options),s={};o.styledMode||(s.stroke=n.lineColor||r.color,s["stroke-width"]=n.lineWidth,n.dashStyle&&(s.dashstyle=n.dashStyle)),s.class="highcharts-point-connecting-path highcharts-color-"+r.colorIndex,n=merge(s,n),defined(n.marker.radius)||(n.marker.radius=min(max(Math.ceil((n.algorithmMargin||8)/2)-1,1),5)),i=(t=this.getPath(n)).path,t.obstacles&&(a.lineObstacles=a.lineObstacles||[],a.lineObstacles=a.lineObstacles.concat(t.obstacles)),this.renderPath(i,s,e.options.animation),this.addMarker("start",merge(n.marker,n.startMarker),i),this.addMarker("end",merge(n.marker,n.endMarker),i)},t.prototype.destroy=function(){this.graphics&&(objectEach(this.graphics,function(t){t.destroy()}),delete this.graphics)},t}();function warnLegacy(t){(t.options.pathfinder||t.series.reduce(function(t,i){return i.options&&merge(!0,i.options.connectors=i.options.connectors||{},i.options.pathfinder),t||i.options&&i.options.pathfinder},!1))&&(merge(!0,t.options.connectors=t.options.connectors||{},t.options.pathfinder),error('WARNING: Pathfinder options have been renamed. Use "chart.connectors" or "series.connectors" instead.'))}H.Connection=Connection,extend(Point.prototype,{getPathfinderAnchorPoint:function(t){var i,r,e=getPointBB(this);switch(t.align){case"right":i="xMax";break;case"left":i="xMin"}switch(t.verticalAlign){case"top":r="yMin";break;case"bottom":r="yMax"}return{x:i?e[i]:(e.xMin+e.xMax)/2,y:r?e[r]:(e.yMin+e.yMax)/2}},getRadiansToVector:function(t,i){var r;return defined(i)||(r=getPointBB(this))&&(i={x:(r.xMin+r.xMax)/2,y:(r.yMin+r.yMax)/2}),Math.atan2(i.y-t.y,t.x-i.x)},getMarkerVector:function(t,i,r){for(var e,o=2*Math.PI,a=t,n=getPointBB(this),s=n.xMax-n.xMin,h=n.yMax-n.yMin,c=Math.atan2(h,s),d=!1,p=s/2,l=h/2,g=n.xMin+p,M=n.yMin+l,x={x:g,y:M},y={},f=1,m=1;a<-Math.PI;)a+=o;for(;a>Math.PI;)a-=o;return e=Math.tan(a),a>-c&&a<=c?(m=-1,d=!0):a>c&&a<=Math.PI-c?m=-1:a>Math.PI-c||a<=-(Math.PI-c)?(f=-1,d=!0):f=-1,d?(x.x+=f*p,x.y+=m*p*e):(x.x+=f*(h/(2*e)),x.y+=m*l),r.x!==g&&(x.x=r.x),r.y!==M&&(x.y=r.y),y.x=x.x+i*Math.cos(a),y.y=x.y-i*Math.sin(a),y}});export default Connection;