import BaseSeries from"../Core/Series/Series.js";import H from"../Core/Globals.js";var noop=H.noop;import OnSeriesMixin from"../Mixins/OnSeries.js";import SVGElement from"../Core/Renderer/SVG/SVGElement.js";import SVGRenderer from"../Core/Renderer/SVG/SVGRenderer.js";import U from"../Core/Utilities.js";var addEvent=U.addEvent,defined=U.defined,isNumber=U.isNumber,merge=U.merge,objectEach=U.objectEach,wrap=U.wrap;import"./ColumnSeries.js";import"../Core/Interaction.js";import"../Core/Renderer/SVG/SVGRenderer.js";var Renderer=H.Renderer,Series=H.Series,TrackerMixin=H.TrackerMixin,VMLRenderer=H.VMLRenderer,symbols=SVGRenderer.prototype.symbols;function createPinSymbol(e){symbols[e+"pin"]=function(r,t,i,o,n){var s,a=n&&n.anchorX,l=n&&n.anchorY;if("circle"===e&&o>i&&(r-=Math.round((o-i)/2),i=o),s=symbols[e](r,t,i,o),a&&l){var p=a;if("circle"===e)p=r+i/2;else{var c=s[0],h=s[1];"M"===c[0]&&"L"===h[0]&&(p=(c[1]+h[1])/2)}var d=t>l?t:t+o;s.push(["M",p,d],["L",a,l]),s=s.concat(symbols.circle(a-1,l-1,2,2))}return s}}BaseSeries.seriesType("flags","column",{pointRange:0,allowOverlapX:!1,shape:"flag",stackDistance:12,textAlign:"center",tooltip:{pointFormat:"{point.text}<br/>"},threshold:null,y:-30,fillColor:"#ffffff",lineWidth:1,states:{hover:{lineColor:"#000000",fillColor:"#ccd6eb"}},style:{fontSize:"11px",fontWeight:"bold"}},{sorted:!1,noSharedTooltip:!0,allowDG:!1,takeOrdinalPosition:!1,trackerGroups:["markerGroup"],forceCrop:!0,init:Series.prototype.init,pointAttribs:function(e,r){var t=this.options,i=e&&e.color||this.color,o=t.lineColor,n=e&&e.lineWidth,s=e&&e.fillColor||t.fillColor;return r&&(s=t.states[r].fillColor,o=t.states[r].lineColor,n=t.states[r].lineWidth),{fill:s||i,stroke:o||i,"stroke-width":n||t.lineWidth||0}},translate:OnSeriesMixin.translate,getPlotBox:OnSeriesMixin.getPlotBox,drawPoints:function(){var e,r,t,i,o,n,s,a,l,p,c,h=this.points,d=this.chart,f=d.renderer,m=d.inverted,u=this.options,y=u.y,g=this.yAxis,v={},S=[];for(i=h.length;i--;)o=h[i],p=(m?o.plotY:o.plotX)>this.xAxis.len,e=o.plotX,s=o.stackIndex,t=o.options.shape||u.shape,void 0!==(r=o.plotY)&&(r=o.plotY+y-(void 0!==s&&s*u.stackDistance)),o.anchorX=s?void 0:o.plotX,a=s?void 0:o.plotY,c="flag"!==t,n=o.graphic,void 0!==r&&e>=0&&!p?(n||(n=o.graphic=f.label("",null,null,t,null,null,u.useHTML),d.styledMode||n.attr(this.pointAttribs(o)).css(merge(u.style,o.style)),n.attr({align:c?"center":"left",width:u.width,height:u.height,"text-align":u.textAlign}).addClass("highcharts-point").add(this.markerGroup),o.graphic.div&&(o.graphic.div.point=o),d.styledMode||n.shadow(u.shadow),n.isNew=!0),e>0&&(e-=n.strokeWidth()%2),l={y:r,anchorY:a},u.allowOverlapX&&(l.x=e,l.anchorX=o.anchorX),n.attr({text:o.options.title||u.title||"A"})[n.isNew?"attr":"animate"](l),u.allowOverlapX||(v[o.plotX]?v[o.plotX].size=Math.max(v[o.plotX].size,n.width):v[o.plotX]={align:c?.5:0,size:n.width,target:e,anchorX:e}),o.tooltipPos=[e,r+g.pos-d.plotTop]):n&&(o.graphic=n.destroy());u.allowOverlapX||(objectEach(v,function(e){e.plotX=e.anchorX,S.push(e)}),H.distribute(S,m?g.len:this.xAxis.len,100),h.forEach(function(e){var r=e.graphic&&v[e.plotX];r&&(e.graphic[e.graphic.isNew?"attr":"animate"]({x:r.pos+r.align*r.size,anchorX:e.anchorX}),defined(r.pos)?e.graphic.isNew=!1:(e.graphic.attr({x:-9999,anchorX:-9999}),e.graphic.isNew=!0))})),u.useHTML&&wrap(this.markerGroup,"on",function(e){return SVGElement.prototype.on.apply(e.apply(this,[].slice.call(arguments,1)),[].slice.call(arguments,1))})},drawTracker:function(){var e=this.points;TrackerMixin.drawTrackerPoint.apply(this),e.forEach(function(r){var t=r.graphic;t&&addEvent(t.element,"mouseover",function(){r.stackIndex>0&&!r.raised&&(r._y=t.y,t.attr({y:r._y-8}),r.raised=!0),e.forEach(function(e){e!==r&&e.raised&&e.graphic&&(e.graphic.attr({y:e._y}),e.raised=!1)})})})},animate:function(e){e&&this.setClip()},setClip:function(){Series.prototype.setClip.apply(this,arguments),!1!==this.options.clip&&this.sharedClipKey&&this.markerGroup.clip(this.chart[this.sharedClipKey])},buildKDTree:noop,invertGroups:noop},{isValid:function(){return isNumber(this.y)||void 0===this.y}}),symbols.flag=function(e,r,t,i,o){var n=o&&o.anchorX||e,s=o&&o.anchorY||r,a=symbols.circle(n-1,s-1,2,2);return a.push(["M",n,s],["L",e,r+i],["L",e,r],["L",e+t,r],["L",e+t,r+i],["L",e,r+i],["Z"]),a},createPinSymbol("circle"),createPinSymbol("square"),Renderer===VMLRenderer&&["circlepin","flag","squarepin"].forEach(function(e){VMLRenderer.prototype.symbols[e]=symbols[e]});