import BaseSeries from"../Core/Series/Series.js";import H from"../Core/Globals.js";var noop=H.noop;import O from"../Core/Options.js";var defaultOptions=O.defaultOptions;import U from"../Core/Utilities.js";var clamp=U.clamp,merge=U.merge,pick=U.pick;import"./ColumnSeries.js";var columnProto=BaseSeries.seriesTypes.column.prototype,columnRangeOptions={pointRange:null,marker:null,states:{hover:{halo:!1}}};BaseSeries.seriesType("columnrange","arearange",merge(defaultOptions.plotOptions.column,defaultOptions.plotOptions.arearange,columnRangeOptions),{translate:function(){var t,o,r=this,n=r.yAxis,e=r.xAxis,a=e.startAngleRad,p=r.chart,i=r.xAxis.isRadial,s=Math.max(p.chartWidth,p.chartHeight)+999;function l(t){return clamp(t,-s,s)}columnProto.translate.apply(r),r.points.forEach(function(s){var c,u,m,h=s.shapeArgs,f=r.options.minPointLength;s.plotHigh=o=l(n.translate(s.high,0,1,0,1)),s.plotLow=l(s.plotY),m=o,u=pick(s.rectPlotY,s.plotY)-o,Math.abs(u)<f?(u+=c=f-u,m-=c/2):u<0&&(m-=u*=-1),i?(t=s.barX+a,s.shapeType="arc",s.shapeArgs=r.polarArc(m+u,m,t,t+s.pointWidth)):(h.height=u,h.y=m,s.tooltipPos=p.inverted?[n.len+n.pos-p.plotLeft-m-u/2,e.len+e.pos-p.plotTop-h.x-h.width/2,u]:[e.left-p.plotLeft+h.x+h.width/2,n.pos-p.plotTop+m+u/2,u])})},directTouch:!0,trackerGroups:["group","dataLabelsGroup"],drawGraph:noop,getSymbol:noop,crispCol:function(){return columnProto.crispCol.apply(this,arguments)},drawPoints:function(){return columnProto.drawPoints.apply(this,arguments)},drawTracker:function(){return columnProto.drawTracker.apply(this,arguments)},getColumnMetrics:function(){return columnProto.getColumnMetrics.apply(this,arguments)},pointAttribs:function(){return columnProto.pointAttribs.apply(this,arguments)},animate:function(){return columnProto.animate.apply(this,arguments)},polarArc:function(){return columnProto.polarArc.apply(this,arguments)},translate3dPoints:function(){return columnProto.translate3dPoints.apply(this,arguments)},translate3dShapes:function(){return columnProto.translate3dShapes.apply(this,arguments)}},{setState:columnProto.pointClass.prototype.setState});