import BaseSeries from"../Core/Series/Series.js";import ColorSeriesModule from"../Mixins/ColorSeries.js";var colorPointMixin=ColorSeriesModule.colorPointMixin;import H from"../Core/Globals.js";import U from"../Core/Utilities.js";var addEvent=U.addEvent,clamp=U.clamp,extend=U.extend,pick=U.pick;import"../Series/HeatmapSeries.js";function tilePaddingFromTileSize(e,t,a){var i=e.options;return{xPad:(i.colsize||1)/-t,yPad:(i.rowsize||1)/-a}}H.tileShapeTypes={hexagon:{alignDataLabel:H.seriesTypes.scatter.prototype.alignDataLabel,getSeriesPadding:function(e){return tilePaddingFromTileSize(e,3,2)},haloPath:function(e){if(!e)return[];var t=this.tileEdges;return[["M",t.x2-e,t.y1+e],["L",t.x3+e,t.y1+e],["L",t.x4+1.5*e,t.y2],["L",t.x3+e,t.y3-e],["L",t.x2-e,t.y3-e],["L",t.x1-1.5*e,t.y2],["Z"]]},translate:function(){var e,t=this.options,a=this.xAxis,i=this.yAxis,n=t.pointPadding||0,r=(t.colsize||1)/3,s=(t.rowsize||1)/2;this.generatePoints(),this.points.forEach(function(t){var l=clamp(Math.floor(a.len-a.translate(t.x-2*r,0,1,0,1)),-a.len,2*a.len),o=clamp(Math.floor(a.len-a.translate(t.x-r,0,1,0,1)),-a.len,2*a.len),p=clamp(Math.floor(a.len-a.translate(t.x+r,0,1,0,1)),-a.len,2*a.len),h=clamp(Math.floor(a.len-a.translate(t.x+2*r,0,1,0,1)),-a.len,2*a.len),d=clamp(Math.floor(i.translate(t.y-s,0,1,0,1)),-i.len,2*i.len),c=clamp(Math.floor(i.translate(t.y,0,1,0,1)),-i.len,2*i.len),y=clamp(Math.floor(i.translate(t.y+s,0,1,0,1)),-i.len,2*i.len),g=pick(t.pointPadding,n),u=g*Math.abs(o-l)/Math.abs(y-c),x=a.reversed?-u:u,m=a.reversed?-g:g,f=i.reversed?-g:g;t.x%2&&(d+=e=e||Math.round(Math.abs(y-d)/2)*(i.reversed?-1:1),c+=e,y+=e),t.plotX=t.clientX=(o+p)/2,t.plotY=c,l+=x+m,o+=m,p-=m,h-=x+m,d-=f,y+=f,t.tileEdges={x1:l,x2:o,x3:p,x4:h,y1:d,y2:c,y3:y},t.shapeType="path",t.shapeArgs={d:[["M",o,d],["L",p,d],["L",h,c],["L",p,y],["L",o,y],["L",l,c],["Z"]]}}),this.translateColors()}},diamond:{alignDataLabel:H.seriesTypes.scatter.prototype.alignDataLabel,getSeriesPadding:function(e){return tilePaddingFromTileSize(e,2,2)},haloPath:function(e){if(!e)return[];var t=this.tileEdges;return[["M",t.x2,t.y1+e],["L",t.x3+e,t.y2],["L",t.x2,t.y3-e],["L",t.x1-e,t.y2],["Z"]]},translate:function(){var e,t=this.options,a=this.xAxis,i=this.yAxis,n=t.pointPadding||0,r=t.colsize||1,s=(t.rowsize||1)/2;this.generatePoints(),this.points.forEach(function(t){var l=clamp(Math.round(a.len-a.translate(t.x-r,0,1,0,0)),-a.len,2*a.len),o=clamp(Math.round(a.len-a.translate(t.x,0,1,0,0)),-a.len,2*a.len),p=clamp(Math.round(a.len-a.translate(t.x+r,0,1,0,0)),-a.len,2*a.len),h=clamp(Math.round(i.translate(t.y-s,0,1,0,0)),-i.len,2*i.len),d=clamp(Math.round(i.translate(t.y,0,1,0,0)),-i.len,2*i.len),c=clamp(Math.round(i.translate(t.y+s,0,1,0,0)),-i.len,2*i.len),y=pick(t.pointPadding,n),g=y*Math.abs(o-l)/Math.abs(c-d),u=a.reversed?-g:g,x=i.reversed?-y:y;t.x%2&&(h+=e=Math.abs(c-h)/2*(i.reversed?-1:1),d+=e,c+=e),t.plotX=t.clientX=o,t.plotY=d,l+=u,p-=u,h-=x,c+=x,t.tileEdges={x1:l,x2:o,x3:p,y1:h,y2:d,y3:c},t.shapeType="path",t.shapeArgs={d:[["M",o,h],["L",p,d],["L",o,c],["L",l,d],["Z"]]}}),this.translateColors()}},circle:{alignDataLabel:H.seriesTypes.scatter.prototype.alignDataLabel,getSeriesPadding:function(e){return tilePaddingFromTileSize(e,2,2)},haloPath:function(e){return H.seriesTypes.scatter.prototype.pointClass.prototype.haloPath.call(this,e+(e&&this.radius))},translate:function(){var e,t,a,i,n=this.options,r=this.xAxis,s=this.yAxis,l=n.pointPadding||0,o=(n.rowsize||1)/2,p=n.colsize||1,h=!1;this.generatePoints(),this.points.forEach(function(n){var d=clamp(Math.round(r.len-r.translate(n.x,0,1,0,0)),-r.len,2*r.len),c=clamp(Math.round(s.translate(n.y,0,1,0,0)),-s.len,2*s.len),y=l,g=!1;void 0!==n.pointPadding&&(y=n.pointPadding,g=!0,h=!0),i&&!h||(e=Math.abs(clamp(Math.floor(r.len-r.translate(n.x+p,0,1,0,0)),-r.len,2*r.len)-d),t=Math.abs(clamp(Math.floor(s.translate(n.y+o,0,1,0,0)),-s.len,2*s.len)-c),a=Math.floor(Math.sqrt(e*e+t*t)/2),i=Math.min(e,a,t)-y,h&&!g&&(h=!1)),n.x%2&&(c+=t*(s.reversed?-1:1)),n.plotX=n.clientX=d,n.plotY=c,n.radius=i,n.shapeType="circle",n.shapeArgs={x:d,y:c,r:i}}),this.translateColors()}},square:{alignDataLabel:H.seriesTypes.heatmap.prototype.alignDataLabel,translate:H.seriesTypes.heatmap.prototype.translate,getSeriesPadding:function(){},haloPath:H.seriesTypes.heatmap.prototype.pointClass.prototype.haloPath}},addEvent(H.Axis,"afterSetAxisTranslation",function(){if(!this.recomputingForTilemap&&"colorAxis"!==this.coll){var e=this,t=e.series.map(function(t){return t.getSeriesPixelPadding&&t.getSeriesPixelPadding(e)}).reduce(function(e,t){return(e&&e.padding)>(t&&t.padding)?e:t},void 0)||{padding:0,axisLengthFactor:1},a=Math.round(t.padding*t.axisLengthFactor);t.padding&&(e.len-=a,e.recomputingForTilemap=!0,e.setAxisTranslation(),delete e.recomputingForTilemap,e.minPixelPadding+=t.padding,e.len+=a)}}),BaseSeries.seriesType("tilemap","heatmap",{marker:null,states:{hover:{halo:{enabled:!0,size:2,opacity:.5,attributes:{zIndex:3}}}},pointPadding:2,tileShape:"hexagon"},{markerAttribs:H.seriesTypes.scatter.prototype.markerAttribs,pointAttribs:H.seriesTypes.column.prototype.pointAttribs,getSymbol:H.noop,drawPoints:function(){var e=this;H.seriesTypes.column.prototype.drawPoints.call(this),this.points.forEach(function(t){t.graphic&&t.graphic[e.chart.styledMode?"css":"animate"](e.colorAttribs(t))})},setOptions:function(){var e=H.seriesTypes.heatmap.prototype.setOptions.apply(this,Array.prototype.slice.call(arguments));return this.tileShape=H.tileShapeTypes[e.tileShape],e},alignDataLabel:function(){return this.tileShape.alignDataLabel.apply(this,Array.prototype.slice.call(arguments))},getSeriesPixelPadding:function(e){var t,a,i=e.isXAxis,n=this.tileShape.getSeriesPadding(this);return n?(t=Math.round(e.translate(i?2*n.xPad:n.yPad,0,1,0,1)),a=Math.round(e.translate(i?n.xPad:0,0,1,0,1)),{padding:Math.abs(t-a)||0,axisLengthFactor:i?2:1.1}):{padding:0,axisLengthFactor:1}},translate:function(){return this.tileShape.translate.apply(this,Array.prototype.slice.call(arguments))}},extend({haloPath:function(){return this.series.tileShape.haloPath.apply(this,Array.prototype.slice.call(arguments))}},colorPointMixin));