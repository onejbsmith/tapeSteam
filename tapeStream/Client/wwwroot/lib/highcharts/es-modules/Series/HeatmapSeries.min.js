import BaseSeries from"../Core/Series/Series.js";import ColorMapMixin from"../Mixins/ColorMapSeries.js";var colorMapPointMixin=ColorMapMixin.colorMapPointMixin,colorMapSeriesMixin=ColorMapMixin.colorMapSeriesMixin;import H from"../Core/Globals.js";var noop=H.noop;import LegendSymbolMixin from"../Mixins/LegendSymbol.js";import SVGRenderer from"../Core/Renderer/SVG/SVGRenderer.js";import U from"../Core/Utilities.js";var clamp=U.clamp,extend=U.extend,fireEvent=U.fireEvent,isNumber=U.isNumber,merge=U.merge,pick=U.pick;import"../Core/Options.js";import"../Series/LineSeries.js";var Series=H.Series,seriesTypes=BaseSeries.seriesTypes,symbols=SVGRenderer.prototype.symbols;BaseSeries.seriesType("heatmap","scatter",{animation:!1,borderWidth:0,nullColor:"#f7f7f7",dataLabels:{formatter:function(){return this.point.value},inside:!0,verticalAlign:"middle",crop:!1,overflow:!1,padding:0},marker:{symbol:"rect",radius:0,lineColor:void 0,states:{hover:{lineWidthPlus:0},select:{}}},clip:!0,pointRange:null,tooltip:{pointFormat:"{point.x}, {point.y}: {point.value}<br/>"},states:{hover:{halo:!1,brightness:.2}}},merge(colorMapSeriesMixin,{pointArrayMap:["y","value"],hasPointSpecificOptions:!0,getExtremesFromAll:!0,directTouch:!0,init:function(){var t;Series.prototype.init.apply(this,arguments),(t=this.options).pointRange=pick(t.pointRange,t.colsize||1),this.yAxis.axisPointRange=t.rowsize||1,extend(symbols,{ellipse:symbols.circle,rect:symbols.square})},getSymbol:Series.prototype.getSymbol,setClip:function(t){var e=this.chart;Series.prototype.setClip.apply(this,arguments),(!1!==this.options.clip||t)&&this.markerGroup.clip((t||this.clipBox)&&this.sharedClipKey?e[this.sharedClipKey]:e.clipRect)},translate:function(){var t=(i=this.options).marker&&i.marker.symbol||"",e=symbols[t]?t:"rect",i=this.options,r=-1!==["circle","square"].indexOf(e);this.generatePoints(),this.points.forEach(function(i){var o,s,a,n=i.getCellAttributes(),l={x:Math.min(n.x1,n.x2),y:Math.min(n.y1,n.y2),width:Math.max(Math.abs(n.x2-n.x1),0),height:Math.max(Math.abs(n.y2-n.y1),0)};a=i.hasImage=0===(i.marker&&i.marker.symbol||t||"").indexOf("url"),r&&(s=Math.abs(l.width-l.height),l.x=Math.min(n.x1,n.x2)+(l.width<l.height?0:s/2),l.y=Math.min(n.y1,n.y2)+(l.width<l.height?s/2:0),l.width=l.height=Math.min(l.width,l.height)),o={plotX:(n.x1+n.x2)/2,plotY:(n.y1+n.y2)/2,clientX:(n.x1+n.x2)/2,shapeType:"path",shapeArgs:merge(!0,l,{d:symbols[e](l.x,l.y,l.width,l.height)})},a&&(i.marker={width:l.width,height:l.height}),extend(i,o)}),fireEvent(this,"afterTranslate")},pointAttribs:function(t,e){var i,r,o=Series.prototype.pointAttribs.call(this,t,e),s=this.options||{},a=this.chart.options.plotOptions||{},n=a.series||{},l=a.heatmap||{},h=s.borderColor||l.borderColor||n.borderColor,p=s.borderWidth||l.borderWidth||n.borderWidth||o["stroke-width"];return o.stroke=t&&t.marker&&t.marker.lineColor||s.marker&&s.marker.lineColor||h||this.color,o["stroke-width"]=p,e&&(r=(i=merge(s.states[e],s.marker&&s.marker.states[e],t.options.states&&t.options.states[e]||{})).brightness,o.fill=i.color||H.color(o.fill).brighten(r||0).get(),o.stroke=i.lineColor),o},markerAttribs:function(t,e){var i,r,o=t.marker||{},s=this.options.marker||{},a=t.shapeArgs||{},n=t.hasImage,l={};return n?{x:t.plotX,y:t.plotY}:(e&&(i=s.states[e]||{},r=o.states&&o.states[e]||{},[["width","x"],["height","y"]].forEach(function(t){l[t[0]]=(r[t[0]]||i[t[0]]||a[t[0]])+(r[t[0]+"Plus"]||i[t[0]+"Plus"]||0),l[t[1]]=a[t[1]]+(a[t[0]]-l[t[0]])/2})),e?l:a)},drawPoints:function(){var t=this;((this.options.marker||{}).enabled||this._hasPointMarkers)&&(Series.prototype.drawPoints.call(this),this.points.forEach(function(e){e.graphic&&e.graphic[t.chart.styledMode?"css":"animate"](t.colorAttribs(e))}))},hasData:function(){return!!this.processedXData.length},getValidPoints:function(t,e){return Series.prototype.getValidPoints.call(this,t,e,!0)},getBox:noop,drawLegendSymbol:LegendSymbolMixin.drawRectangle,alignDataLabel:seriesTypes.column.prototype.alignDataLabel,getExtremes:function(){var t=Series.prototype.getExtremes.call(this,this.valueData),e=t.dataMin,i=t.dataMax;return isNumber(e)&&(this.valueMin=e),isNumber(i)&&(this.valueMax=i),Series.prototype.getExtremes.call(this)}}),merge(colorMapPointMixin,{applyOptions:function(t,e){var i=H.Point.prototype.applyOptions.call(this,t,e);return i.formatPrefix=i.isNull||null===i.value?"null":"point",i},isValid:function(){return this.value!==1/0&&this.value!==-1/0},haloPath:function(t){if(!t)return[];var e=this.shapeArgs;return["M",e.x-t,e.y-t,"L",e.x-t,e.y+e.height+t,e.x+e.width+t,e.y+e.height+t,e.x+e.width+t,e.y-t,"Z"]},getCellAttributes:function(){var t=this.series,e=t.options,i=(e.colsize||1)/2,r=(e.rowsize||1)/2,o=t.xAxis,s=t.yAxis,a=this.options.marker||t.options.marker,n=t.pointPlacementToXValue(),l=pick(this.pointPadding,e.pointPadding,0),h={x1:clamp(Math.round(o.len-(o.translate(this.x-i,!1,!0,!1,!0,-n)||0)),-o.len,2*o.len),x2:clamp(Math.round(o.len-(o.translate(this.x+i,!1,!0,!1,!0,-n)||0)),-o.len,2*o.len),y1:clamp(Math.round(s.translate(this.y-r,!1,!0,!1,!0)||0),-s.len,2*s.len),y2:clamp(Math.round(s.translate(this.y+r,!1,!0,!1,!0)||0),-s.len,2*s.len)};return[["width","x"],["height","y"]].forEach(function(t){var e=t[0],i=t[1],r=i+"1",o=i+"2",s=Math.abs(h[r]-h[o]),n=a&&a.lineWidth||0,p=Math.abs(h[r]+h[o])/2;a[e]&&a[e]<s&&(h[r]=p-a[e]/2-n/2,h[o]=p+a[e]/2+n/2),l&&("y"===i&&(r=o,o=i+"1"),h[r]+=l,h[o]-=l)}),h}}));