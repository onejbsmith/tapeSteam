import A from"../Core/Animation/AnimationUtilities.js";var animObject=A.animObject;import BaseSeries from"../Core/Series/Series.js";var seriesTypes=BaseSeries.seriesTypes;import Color from"../Core/Color/Color.js";var color=Color.parse;import DrawPointMixin from"../Mixins/DrawPoint.js";var draw=DrawPointMixin.draw;import GeometryMixin from"../Mixins/Geometry.js";var getCenterOfPoints=GeometryMixin.getCenterOfPoints,getDistanceBetweenPoints=GeometryMixin.getDistanceBetweenPoints;import GeometryCirclesModule from"../Mixins/GeometryCircles.js";var getAreaOfCircle=GeometryCirclesModule.getAreaOfCircle,getAreaOfIntersectionBetweenCircles=GeometryCirclesModule.getAreaOfIntersectionBetweenCircles,getCircleCircleIntersection=GeometryCirclesModule.getCircleCircleIntersection,getCirclesIntersectionPolygon=GeometryCirclesModule.getCirclesIntersectionPolygon,getOverlapBetweenCirclesByDistance=GeometryCirclesModule.getOverlapBetweenCircles,isCircle1CompletelyOverlappingCircle2=GeometryCirclesModule.isCircle1CompletelyOverlappingCircle2,isPointInsideAllCircles=GeometryCirclesModule.isPointInsideAllCircles,isPointInsideCircle=GeometryCirclesModule.isPointInsideCircle,isPointOutsideAllCircles=GeometryCirclesModule.isPointOutsideAllCircles;import NelderMeadMixin from"../Mixins/NelderMead.js";var nelderMead=NelderMeadMixin.nelderMead;import U from"../Core/Utilities.js";var addEvent=U.addEvent,extend=U.extend,isArray=U.isArray,isNumber=U.isNumber,isObject=U.isObject,isString=U.isString,merge=U.merge;import"./ScatterSeries.js";var objectValues=function(e){return Object.keys(e).map(function(t){return e[t]})},getOverlapBetweenCircles=function(e){var t=0;if(2===e.length){var r=e[0],i=e[1];t=getOverlapBetweenCirclesByDistance(r.r,i.r,getDistanceBetweenPoints(r,i))}return t},loss=function(e,t){return t.reduce(function(t,r){var i=0;if(r.sets.length>1){var n=r.value-getOverlapBetweenCircles(r.sets.map(function(t){return e[t]}));i=Math.round(n*n*1e11)/1e11}return t+i},0)},bisect=function(e,t,r,i,n){var o,s,a=e(t),l=e(r),c=n||100,u=i||1e-10,d=r-t,f=1;if(t>=r)throw new Error("a must be smaller than b.");if(a*l>0)throw new Error("f(a) and f(b) must have opposite signs.");if(0===a)o=t;else if(0===l)o=r;else for(;f++<=c&&0!==s&&d>u;)a*(s=e(o=t+(d=(r-t)/2)))>0?t=o:r=o;return o},getDistanceBetweenCirclesByOverlap=function(e,t,r){var i=e+t;return r<=0?i:getAreaOfCircle(e<t?e:t)<=r?0:bisect(function(i){var n=getOverlapBetweenCirclesByDistance(e,t,i);return r-n},0,i)},isSet=function(e){return isArray(e.sets)&&1===e.sets.length},getMarginFromCircles=function(e,t,r){var i=t.reduce(function(t,r){var i=r.r-getDistanceBetweenPoints(e,r);return i<=t?i:t},Number.MAX_VALUE);return i=r.reduce(function(t,r){var i=getDistanceBetweenPoints(e,r)-r.r;return i<=t?i:t},i)},getLabelPosition=function(e,t){var r=e.reduce(function(r,i){var n=i.r/2;return[{x:i.x,y:i.y},{x:i.x+n,y:i.y},{x:i.x-n,y:i.y},{x:i.x,y:i.y+n},{x:i.x,y:i.y-n}].reduce(function(r,i){var n=getMarginFromCircles(i,e,t);return r.margin<n&&(r.point=i,r.margin=n),r},r)},{point:void 0,margin:-Number.MAX_VALUE}).point,i=nelderMead(function(r){return-getMarginFromCircles({x:r[0],y:r[1]},e,t)},[r.x,r.y]);return r={x:i[0],y:i[1]},isPointInsideAllCircles(r,e)&&isPointOutsideAllCircles(r,t)||(r=e.length>1?getCenterOfPoints(getCirclesIntersectionPolygon(e)):{x:e[0].x,y:e[0].y}),r},getLabelWidth=function(e,t,r){var i=t.reduce(function(e,t){return Math.min(t.r,e)},1/0),n=r.filter(function(t){return!isPointInsideCircle(e,t)}),o=function(r,i){return bisect(function(o){var s={x:e.x+i*o,y:e.y},a=isPointInsideAllCircles(s,t)&&isPointOutsideAllCircles(s,n);return-(r-o)+(a?0:Number.MAX_VALUE)},0,r)};return 2*Math.min(o(i,-1),o(i,1))};function getLabelValues(e,t){var r=e.sets,i=t.reduce(function(e,t){return e[r.indexOf(t.sets[0])>-1?"internal":"external"].push(t.circle),e},{internal:[],external:[]});i.external=i.external.filter(function(e){return i.internal.some(function(t){return!isCircle1CompletelyOverlappingCircle2(e,t)})});var n=getLabelPosition(i.internal,i.external);return{position:n,width:getLabelWidth(n,i.internal,i.external)}}var addOverlapToSets=function(e){var t=e.filter(function(e){return 2===e.sets.length}).reduce(function(e,t){return t.sets.forEach(function(r,i,n){isObject(e[r])||(e[r]={overlapping:{},totalOverlap:0}),e[r].totalOverlap+=t.value,e[r].overlapping[n[1-i]]=t.value}),e},{});return e.filter(isSet).forEach(function(e){var r=t[e.sets[0]];extend(e,r)}),e},sortByTotalOverlap=function(e,t){return t.totalOverlap-e.totalOverlap},layoutGreedyVenn=function(e){var t=[],r={};e.filter(function(e){return 1===e.sets.length}).forEach(function(e){r[e.sets[0]]=e.circle={x:Number.MAX_VALUE,y:Number.MAX_VALUE,r:Math.sqrt(e.value/Math.PI)}});var i=function(e,r){var i=e.circle;i.x=r.x,i.y=r.y,t.push(e)};addOverlapToSets(e);var n=e.filter(isSet).sort(sortByTotalOverlap);i(n.shift(),{x:0,y:0});var o=e.filter(function(e){return 2===e.sets.length});return n.forEach(function(e){var n=e.circle,s=n.r,a=e.overlapping,l=t.reduce(function(e,i,l){var c=i.circle,u=a[i.sets[0]],d=getDistanceBetweenCirclesByOverlap(s,c.r,u),f=[{x:c.x+d,y:c.y},{x:c.x-d,y:c.y},{x:c.x,y:c.y+d},{x:c.x,y:c.y-d}];return t.slice(l+1).forEach(function(e){var t=e.circle,r=a[e.sets[0]],i=getDistanceBetweenCirclesByOverlap(s,t.r,r);f=f.concat(getCircleCircleIntersection({x:c.x,y:c.y,r:d},{x:t.x,y:t.y,r:i}))}),f.forEach(function(t){n.x=t.x,n.y=t.y;var i=loss(r,o);i<e.loss&&(e.loss=i,e.coordinates=t)}),e},{loss:Number.MAX_VALUE,coordinates:void 0});i(e,l.coordinates)}),r};function layout(e){var t={},r={};if(e.length>0){var i=layoutGreedyVenn(e),n=e.filter(isSet);e.forEach(function(e){var o=e.sets,s=o.join(),a=isSet(e)?i[s]:getAreaOfIntersectionBetweenCircles(o.map(function(e){return i[e]}));a&&(t[s]=a,r[s]=getLabelValues(e,n))})}return{mapOfIdToShape:t,mapOfIdToLabelValues:r}}var isValidRelation=function(e){var t={};return isObject(e)&&isNumber(e.value)&&e.value>-1&&isArray(e.sets)&&e.sets.length>0&&!e.sets.some(function(e){var r=!1;return!t[e]&&isString(e)?t[e]=!0:r=!0,r})},isValidSet=function(e){return isValidRelation(e)&&isSet(e)&&e.value>0},processVennData=function(e){var t=isArray(e)?e:[],r=t.reduce(function(e,t){return isValidSet(t)&&-1===e.indexOf(t.sets[0])&&e.push(t.sets[0]),e},[]).sort(),i=t.reduce(function(e,t){return isValidRelation(t)&&!t.sets.some(function(e){return-1===r.indexOf(e)})&&(e[t.sets.sort().join()]=t),e},{});return r.reduce(function(e,t,r,i){return i.slice(r+1).forEach(function(r){e.push(t+","+r)}),e},[]).forEach(function(e){if(!i[e]){var t={sets:e.split(","),value:0};i[e]=t}}),objectValues(i)},getScale=function(e,t,r){var i=r.bottom-r.top,n=r.right-r.left,o=n>0?1/n*e:1,s=i>0?1/i*t:1,a=(r.right+r.left)/2,l=(r.top+r.bottom)/2,c=Math.min(o,s);return{scale:c,centerX:e/2-a*c,centerY:t/2-l*c}},updateFieldBoundaries=function(e,t){var r=t.x-t.r,i=t.x+t.r,n=t.y+t.r,o=t.y-t.r;return(!isNumber(e.left)||e.left>r)&&(e.left=r),(!isNumber(e.right)||e.right<i)&&(e.right=i),(!isNumber(e.top)||e.top>o)&&(e.top=o),(!isNumber(e.bottom)||e.bottom<n)&&(e.bottom=n),e},vennOptions={borderColor:"#cccccc",borderDashStyle:"solid",borderWidth:1,brighten:0,clip:!1,colorByPoint:!0,dataLabels:{enabled:!0,verticalAlign:"middle",formatter:function(){return this.point.name}},inactiveOtherPoints:!0,marker:!1,opacity:.75,showInLegend:!1,states:{hover:{opacity:1,borderColor:"#333333"},select:{color:"#cccccc",borderColor:"#000000",animation:!1},inactive:{opacity:.075}},tooltip:{pointFormat:"{point.name}: {point.value}"}},vennSeries={isCartesian:!1,axisTypes:[],directTouch:!0,pointArrayMap:["value"],init:function(){seriesTypes.scatter.prototype.init.apply(this,arguments),delete this.opacity},translate:function(){var e=this.chart;this.processedXData=this.xData,this.generatePoints();var t=layout(processVennData(this.options.data)),r=t.mapOfIdToShape,i=t.mapOfIdToLabelValues,n=Object.keys(r).filter(function(e){var t=r[e];return t&&isNumber(t.r)}).reduce(function(e,t){return updateFieldBoundaries(e,r[t])},{top:0,bottom:0,left:0,right:0}),o=getScale(e.plotWidth,e.plotHeight,n),s=o.scale,a=o.centerX,l=o.centerY;this.points.forEach(function(e){var t,n=isArray(e.sets)?e.sets:[],o=n.join(),c=r[o],u=i[o]||{},d=u.width,f=u.position,p=e.options&&e.options.dataLabels;if(c){if(c.r)t={x:a+c.x*s,y:l+c.y*s,r:c.r*s};else if(c.d){var y=c.d;y.forEach(function(e){"M"===e[0]?(e[1]=a+e[1]*s,e[2]=l+e[2]*s):"A"===e[0]&&(e[1]=e[1]*s,e[2]=e[2]*s,e[6]=a+e[6]*s,e[7]=l+e[7]*s)}),t={d:y}}f?(f.x=a+f.x*s,f.y=l+f.y*s):f={},isNumber(d)&&(d=Math.round(d*s))}e.shapeArgs=t,f&&t&&(e.plotX=f.x,e.plotY=f.y),d&&t&&(e.dlOptions=merge(!0,{style:{width:d}},isObject(p)&&p)),e.name=e.options.name||n.join("âˆ©")})},drawPoints:function(){var e=this,t=e.chart,r=e.group,i=e.points||[],n=t.renderer;i.forEach(function(i){var o={zIndex:isArray(i.sets)?i.sets.length:0},s=i.shapeArgs;t.styledMode||extend(o,e.pointAttribs(i,i.state)),i.draw({isNew:!i.graphic,animatableAttribs:s,attribs:o,group:r,renderer:n,shapeType:s&&s.d?"path":"circle"})})},pointAttribs:function(e,t){var r=this.options||{},i=e&&e.options||{},n=t&&r.states[t]||{},o=merge(r,{color:e&&e.color},i,n);return{fill:color(o.color).setOpacity(o.opacity).brighten(o.brightness).get(),stroke:o.borderColor,"stroke-width":o.borderWidth,dashstyle:o.borderDashStyle}},animate:function(e){if(!e){var t=animObject(this.options.animation);this.points.forEach(function(e){var r=e.shapeArgs;if(e.graphic&&r){var i={},n={};r.d?i.opacity=.001:(i.r=0,n.r=r.r),e.graphic.attr(i).animate(n,t),r.d&&setTimeout(function(){e&&e.graphic&&e.graphic.animate({opacity:1})},t.duration)}},this)}},utils:{addOverlapToSets:addOverlapToSets,geometry:GeometryMixin,geometryCircles:GeometryCirclesModule,getLabelWidth:getLabelWidth,getMarginFromCircles:getMarginFromCircles,getDistanceBetweenCirclesByOverlap:getDistanceBetweenCirclesByOverlap,layoutGreedyVenn:layoutGreedyVenn,loss:loss,nelderMead:NelderMeadMixin,processVennData:processVennData,sortByTotalOverlap:sortByTotalOverlap}},vennPoint={draw:draw,shouldDraw:function(){return!!this.shapeArgs},isValid:function(){return isNumber(this.value)}};BaseSeries.seriesType("venn","scatter",vennOptions,vennSeries,vennPoint),addEvent(seriesTypes.venn,"afterSetOptions",function(e){var t=e.options.states;this.is("venn")&&Object.keys(t).forEach(function(e){t[e].halo=!1})});