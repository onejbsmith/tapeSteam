import Color from"../Core/Color/Color.js";var color=Color.parse;import H from"../Core/Globals.js";var charts=H.charts,deg2rad=H.deg2rad,RendererProto=H.Renderer.prototype;import Math3D from"../Extensions/Math3D.js";var perspective=Math3D.perspective;import Series from"../Core/Series/Series.js";import U from"../Core/Utilities.js";var merge=U.merge,pick=U.pick,cuboidPath=RendererProto.cuboidPath,isSimplified=function(e){return!e.some(function(e){return"C"===e[0]})};Series.seriesType("cylinder","column",{},{},{shapeType:"cylinder",hasNewShapeType:H.seriesTypes.column.prototype.pointClass.prototype.hasNewShapeType});var cylinderMethods=merge(RendererProto.elements3d.cuboid,{parts:["top","bottom","front","back"],pathType:"cylinder",fillSetter:function(e){return this.singleSetterForParts("fill",null,{front:e,back:e,top:color(e).brighten(.1).get(),bottom:color(e).brighten(-.1).get()}),this.color=this.fill=e,this}});RendererProto.elements3d.cylinder=cylinderMethods,RendererProto.cylinder=function(e){return this.element3d("cylinder",e)},RendererProto.cylinderPath=function(e){var r=charts[this.chartIndex],t=cuboidPath.call(this,e),o=!t.isTop,i=!t.isFront,s=this.getCylinderEnd(r,e),n=this.getCylinderEnd(r,e,!0);return{front:this.getCylinderFront(s,n),back:this.getCylinderBack(s,n),top:s,bottom:n,zIndexes:{top:o?3:0,bottom:o?0:3,front:i?2:1,back:i?1:2,group:t.zIndexes.group}}},RendererProto.getCylinderFront=function(e,r){var t=e.slice(0,3);if(isSimplified(r)){"M"===(o=r[0])[0]&&(t.push(r[2]),t.push(r[1]),t.push(["L",o[1],o[2]]))}else{var o=r[0],i=r[1],s=r[2];"M"===o[0]&&"C"===i[0]&&"C"===s[0]&&(t.push(["L",s[5],s[6]]),t.push(["C",s[3],s[4],s[1],s[2],i[5],i[6]]),t.push(["C",i[3],i[4],i[1],i[2],o[1],o[2]]))}return t.push(["Z"]),t},RendererProto.getCylinderBack=function(e,r){var t=[];if(isSimplified(e)){var o=e[0],i=e[2];"M"===o[0]&&"L"===i[0]&&(t.push(["M",i[1],i[2]]),t.push(e[3]),t.push(["L",o[1],o[2]]))}else"C"===e[2][0]&&t.push(["M",e[2][5],e[2][6]]),t.push(e[3],e[4]);if(isSimplified(r)){"M"===(o=r[0])[0]&&(t.push(["L",o[1],o[2]]),t.push(r[3]),t.push(r[2]))}else{var s=r[2],n=r[3],h=r[4];"C"===s[0]&&"C"===n[0]&&"C"===h[0]&&(t.push(["L",h[5],h[6]]),t.push(["C",h[3],h[4],h[1],h[2],n[5],n[6]]),t.push(["C",n[3],n[4],n[1],n[2],s[5],s[6]]))}return t.push(["Z"]),t},RendererProto.getCylinderEnd=function(e,r,t){var o,i,s,n=pick(r.depth,r.width),h=Math.min(r.width,n)/2,p=deg2rad*(e.options.chart.options3d.beta-90+(r.alphaCorrection||0)),a=r.y+(t?r.height:0),d=.5519*h,l=r.width/2+r.x,c=n/2+r.z,u=[{x:0,y:a,z:h},{x:d,y:a,z:h},{x:h,y:a,z:d},{x:h,y:a,z:0},{x:h,y:a,z:-d},{x:d,y:a,z:-h},{x:0,y:a,z:-h},{x:-d,y:a,z:-h},{x:-h,y:a,z:-d},{x:-h,y:a,z:0},{x:-h,y:a,z:d},{x:-d,y:a,z:h},{x:0,y:a,z:h}],y=Math.cos(p),f=Math.sin(p);return u.forEach(function(e,r){i=e.x,s=e.z,u[r].x=i*y-s*f+l,u[r].z=s*y+i*f+c}),o=perspective(u,e,!0),Math.abs(o[3].y-o[9].y)<2.5&&Math.abs(o[0].y-o[6].y)<2.5?this.toLinePath([o[0],o[3],o[6],o[9]],!0):this.getCurvedPath(o)},RendererProto.getCurvedPath=function(e){var r,t=[["M",e[0].x,e[0].y]],o=e.length-2;for(r=1;r<o;r+=3)t.push(["C",e[r].x,e[r].y,e[r+1].x,e[r+1].y,e[r+2].x,e[r+2].y]);return t};