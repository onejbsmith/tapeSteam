import BaseSeries from"../Core/Series/Series.js";import SVGRenderer from"../Core/Renderer/SVG/SVGRenderer.js";import H from"../Core/Globals.js";var noop=H.noop;import U from"../Core/Utilities.js";var extend=U.extend,pick=U.pick;import"./AreaRangeSeries.js";import"./ColumnRangeSeries.js";import"./ColumnSeries.js";import"../Core/Interaction.js";var seriesProto=H.Series.prototype,seriesTypes=BaseSeries.seriesTypes,areaRangeProto=seriesTypes.arearange.prototype,columnRangeProto=seriesTypes.columnrange.prototype,colProto=seriesTypes.column.prototype,areaRangePointProto=areaRangeProto.pointClass.prototype,TrackerMixin=H.TrackerMixin;BaseSeries.seriesType("dumbbell","arearange",{trackByArea:!1,fillColor:"none",lineWidth:0,pointRange:1,connectorWidth:1,stickyTracking:!1,groupPadding:.2,crisp:!1,pointPadding:.1,lowColor:"#333333",states:{hover:{lineWidthPlus:0,connectorWidthPlus:1,halo:!1}}},{trackerGroups:["group","markerGroup","dataLabelsGroup"],drawTracker:TrackerMixin.drawTrackerPoint,drawGraph:noop,crispCol:colProto.crispCol,getConnectorAttribs:function(o){var t,r,e=this.chart,i=o.options,s=this.options,n=this.xAxis,a=this.yAxis,l=pick(i.connectorWidth,s.connectorWidth),p=pick(i.connectorColor,s.connectorColor,i.color,o.zone?o.zone.color:void 0,o.color),c=pick(s.states&&s.states.hover&&s.states.hover.connectorWidthPlus,1),h=pick(i.dashStyle,s.dashStyle),d=pick(o.plotLow,o.plotY),u=a.toPixels(s.threshold||0,!0),g=e.inverted?a.len-u:u,m=pick(o.plotHigh,g);return o.state&&(l+=c),d<0?d=0:d>=a.len&&(d=a.len),m<0?m=0:m>=a.len&&(m=a.len),(o.plotX<0||o.plotX>n.len)&&(l=0),o.upperGraphic&&(r={y:o.y,zone:o.zone},o.y=o.high,o.zone=o.zone?o.getZone():void 0,p=pick(i.connectorColor,s.connectorColor,i.color,o.zone?o.zone.color:void 0,o.color),extend(o,r)),t={d:SVGRenderer.prototype.crispLine([["M",o.plotX,d],["L",o.plotX,m]],l,"ceil")},e.styledMode||(t.stroke=p,t["stroke-width"]=l,h&&(t.dashstyle=h)),t},drawConnector:function(o){var t=pick(this.options.animationLimit,250),r=o.connector&&this.chart.pointCount<t?"animate":"attr";o.connector||(o.connector=this.chart.renderer.path().addClass("highcharts-lollipop-stem").attr({zIndex:-1}).add(this.markerGroup)),o.connector[r](this.getConnectorAttribs(o))},getColumnMetrics:function(){var o=colProto.getColumnMetrics.apply(this,arguments);return o.offset+=o.width/2,o},translatePoint:areaRangeProto.translate,setShapeArgs:columnRangeProto.translate,translate:function(){this.setShapeArgs.apply(this),this.translatePoint.apply(this,arguments),this.points.forEach(function(o){var t=o.shapeArgs,r=o.pointWidth;o.plotX=t.x,t.x=o.plotX-r/2,o.tooltipPos=null}),this.columnMetrics.offset-=this.columnMetrics.width/2},seriesDrawPoints:areaRangeProto.drawPoints,drawPoints:function(){var o,t,r,e=this.chart,i=this.points.length,s=this.lowColor=this.options.lowColor,n=0;for(this.seriesDrawPoints.apply(this,arguments);n<i;)t=this.points[n],this.drawConnector(t),t.upperGraphic&&(t.upperGraphic.element.point=t,t.upperGraphic.addClass("highcharts-lollipop-high")),t.connector.element.point=t,t.lowerGraphic&&(r=t.zone&&t.zone.color,o=pick(t.options.lowColor,s,t.options.color,r,t.color,this.color),e.styledMode||t.lowerGraphic.attr({fill:o}),t.lowerGraphic.addClass("highcharts-lollipop-low")),n++},markerAttribs:function(){var o=areaRangeProto.markerAttribs.apply(this,arguments);return o.x=Math.floor(o.x),o.y=Math.floor(o.y),o},pointAttribs:function(o,t){var r;return r=seriesProto.pointAttribs.apply(this,arguments),"hover"===t&&delete r.fill,r}},{destroyElements:areaRangePointProto.destroyElements,isValid:areaRangePointProto.isValid,pointSetState:areaRangePointProto.setState,setState:function(){var o,t,r=this.series,e=r.chart,i=r.options.lowColor,s=r.options.marker,n=this.options,a=n.lowColor,l=this.zone&&this.zone.color,p=pick(a,i,n.color,l,this.color,r.color),c="attr";this.pointSetState.apply(this,arguments),this.state||(c="animate",this.lowerGraphic&&!e.styledMode&&(this.lowerGraphic.attr({fill:p}),this.upperGraphic&&(t={y:this.y,zone:this.zone},this.y=this.high,this.zone=this.zone?this.getZone():void 0,o=pick(this.marker?this.marker.fillColor:void 0,s?s.fillColor:void 0,n.color,this.zone?this.zone.color:void 0,this.color),this.upperGraphic.attr({fill:o}),extend(this,t)))),this.connector[c](r.getConnectorAttribs(this))}});