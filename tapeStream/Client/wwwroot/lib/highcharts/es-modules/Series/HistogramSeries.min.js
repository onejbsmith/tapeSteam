import BaseSeries from"../Core/Series/Series.js";import DerivedSeriesMixin from"../Mixins/DerivedSeries.js";import U from"../Core/Utilities.js";var arrayMax=U.arrayMax,arrayMin=U.arrayMin,correctFloat=U.correctFloat,isNumber=U.isNumber,merge=U.merge,objectEach=U.objectEach;import"./ColumnSeries.js";var binsNumberFormulas={"square-root":function(r){return Math.ceil(Math.sqrt(r.options.data.length))},sturges:function(r){return Math.ceil(Math.log(r.options.data.length)*Math.LOG2E)},rice:function(r){return Math.ceil(2*Math.pow(r.options.data.length,1/3))}};function fitToBinLeftClosed(r){return function(t){for(var e=1;r[e]<=t;)e++;return r[--e]}}BaseSeries.seriesType("histogram","column",{binsNumber:"square-root",binWidth:void 0,pointPadding:0,groupPadding:0,grouping:!1,pointPlacement:"between",tooltip:{headerFormat:"",pointFormat:'<span style="font-size: 10px">{point.x} - {point.x2}</span><br/><span style="color:{point.color}">‚óè</span> {series.name} <b>{point.y}</b><br/>'}},merge(DerivedSeriesMixin,{setDerivedData:function(){var r=this.baseSeries.yData;if(r.length){var t=this.derivedData(r,this.binsNumber(),this.options.binWidth);this.setData(t,!1)}},derivedData:function(r,t,e){var i,o,a=arrayMax(r),n=correctFloat(arrayMin(r)),s=[],c={},u=[];for(e=this.binWidth=correctFloat(isNumber(e)?e||1:(a-n)/t),this.options.pointRange=Math.max(e,0),i=n;i<a&&(this.userOptions.binWidth||correctFloat(a-i)>=e||correctFloat(correctFloat(n+s.length*e)-i)<=0);i=correctFloat(i+e))s.push(i),c[i]=0;return 0!==c[n]&&(s.push(correctFloat(n)),c[correctFloat(n)]=0),o=fitToBinLeftClosed(s.map(function(r){return parseFloat(r)})),r.forEach(function(r){var t=correctFloat(o(r));c[t]++}),objectEach(c,function(r,t){u.push({x:Number(t),y:r,x2:correctFloat(Number(t)+e)})}),u.sort(function(r,t){return r.x-t.x}),u},binsNumber:function(){var r=this.options.binsNumber,t=binsNumberFormulas[r]||"function"==typeof r&&r;return Math.ceil(t&&t(this.baseSeries)||(isNumber(r)?r:binsNumberFormulas["square-root"](this.baseSeries)))}}));