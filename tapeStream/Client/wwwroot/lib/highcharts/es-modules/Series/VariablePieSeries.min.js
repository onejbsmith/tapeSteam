import BaseSeries from"../Core/Series/Series.js";var seriesTypes=BaseSeries.seriesTypes;import U from"../Core/Utilities.js";var arrayMax=U.arrayMax,arrayMin=U.arrayMin,clamp=U.clamp,fireEvent=U.fireEvent,pick=U.pick;import"../Core/Options.js";import"./PieSeries.js";var pieProto=seriesTypes.pie.prototype;BaseSeries.seriesType("variablepie","pie",{minPointSize:"10%",maxPointSize:"100%",zMin:void 0,zMax:void 0,sizeBy:"area",tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> {series.name}<br/>Value: {point.y}<br/>Size: {point.z}<br/>'}},{pointArrayMap:["y","z"],parallelArrays:["x","y","z"],redraw:function(){this.center=null,pieProto.redraw.call(this,arguments)},zValEval:function(t){return"number"==typeof t&&!isNaN(t)||null},calculateExtremes:function(){var t,i,a=this.chart,e=a.plotWidth,s=a.plotHeight,n=this.options,r=2*(n.slicedOffset||0),o=this.zData,l=Math.min(e,s)-r,h={},c=this.center||this.getCenter();["minPointSize","maxPointSize"].forEach(function(t){var i=n[t],a=/%$/.test(i);i=parseInt(i,10),h[t]=a?l*i/100:2*i}),this.minPxSize=c[3]+h.minPointSize,this.maxPxSize=clamp(c[2],c[3]+h.minPointSize,h.maxPointSize),o.length&&(t=pick(n.zMin,arrayMin(o.filter(this.zValEval))),i=pick(n.zMax,arrayMax(o.filter(this.zValEval))),this.getRadii(t,i,this.minPxSize,this.maxPxSize))},getRadii:function(t,i,a,e){for(var s,n,r,o=0,l=this.zData,h=l.length,c=[],p="radius"!==this.options.sizeBy,M=i-t;o<h;o++)(n=this.zValEval(l[o])?l[o]:t)<=t?r=a/2:n>=i?r=e/2:(s=M>0?(n-t)/M:.5,p&&(s=Math.sqrt(s)),r=Math.ceil(a+s*(e-a))/2),c.push(r);this.radii=c},translate:function(t){this.generatePoints();var i,a,e,s,n,r,o,l,h,c,p,M=0,d=this.options,m=d.slicedOffset,z=m+(d.borderWidth||0),P=d.startAngle||0,f=Math.PI/180*(P-90),y=Math.PI/180*(pick(d.endAngle,P+360)-90),x=y-f,u=this.points,g=d.dataLabels.distance,b=d.ignoreHiddenPoint,S=u.length;for(this.startAngleRad=f,this.endAngleRad=y,this.calculateExtremes(),t||(this.center=t=this.getCenter()),o=0;o<S;o++)l=u[o],h=this.radii[o],l.labelDistance=pick(l.options.dataLabels&&l.options.dataLabels.distance,g),this.maxLabelDistance=Math.max(this.maxLabelDistance||0,l.labelDistance),a=f+M*x,b&&!l.visible||(M+=l.percentage/100),e=f+M*x,l.shapeType="arc",l.shapeArgs={x:t[0],y:t[1],r:h,innerR:t[3]/2,start:Math.round(1e3*a)/1e3,end:Math.round(1e3*e)/1e3},(s=(e+a)/2)>1.5*Math.PI?s-=2*Math.PI:s<-Math.PI/2&&(s+=2*Math.PI),l.slicedTranslation={translateX:Math.round(Math.cos(s)*m),translateY:Math.round(Math.sin(s)*m)},n=Math.cos(s)*t[2]/2,r=Math.sin(s)*t[2]/2,c=Math.cos(s)*h,p=Math.sin(s)*h,l.tooltipPos=[t[0]+.7*n,t[1]+.7*r],l.half=s<-Math.PI/2||s>Math.PI/2?1:0,l.angle=s,i=Math.min(z,l.labelDistance/5),l.labelPosition={natural:{x:t[0]+c+Math.cos(s)*l.labelDistance,y:t[1]+p+Math.sin(s)*l.labelDistance},final:{},alignment:l.half?"right":"left",connectorPosition:{breakAt:{x:t[0]+c+Math.cos(s)*i,y:t[1]+p+Math.sin(s)*i},touchingSliceAt:{x:t[0]+c,y:t[1]+p}}};fireEvent(this,"afterTranslate")}});