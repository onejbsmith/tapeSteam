import BaseSeries from"../Core/Series/Series.js";import H from"../Core/Globals.js";import U from"../Core/Utilities.js";var addEvent=U.addEvent;import"../Core/Options.js";import"../Series/LineSeries.js";var Series=H.Series;BaseSeries.seriesType("scatter","line",{lineWidth:0,findNearestPointBy:"xy",jitter:{x:0,y:0},marker:{enabled:!0},tooltip:{headerFormat:'<span style="color:{point.color}">‚óè</span> <span style="font-size: 10px"> {series.name}</span><br/>',pointFormat:"x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>"}},{sorted:!1,requireSorting:!1,noSharedTooltip:!0,trackerGroups:["group","markerGroup","dataLabelsGroup"],takeOrdinalPosition:!1,drawGraph:function(){(this.options.lineWidth||0===this.options.lineWidth&&this.graph&&this.graph.strokeWidth())&&Series.prototype.drawGraph.call(this)},applyJitter:function(){var t=this,i=this.options.jitter,e=this.points.length;i&&this.points.forEach(function(r,o){["x","y"].forEach(function(s,a){var n,p,l,h,d,m,f="plot"+s.toUpperCase();i[s]&&!r.isNull&&(n=t[s+"Axis"],h=i[s]*n.transA,n&&!n.isLog&&(p=Math.max(0,r[f]-h),l=Math.min(n.len,r[f]+h),r[f]=p+(l-p)*(d=o+a*e,(m=1e4*Math.sin(d))-Math.floor(m)),"x"===s&&(r.clientX=r.plotX)))})})}}),addEvent(Series,"afterTranslate",function(){this.applyJitter&&this.applyJitter()});