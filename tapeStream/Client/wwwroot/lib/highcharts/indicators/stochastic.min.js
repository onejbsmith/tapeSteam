!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/stochastic",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,i,n){t.hasOwnProperty(e)||(t[e]=n.apply(null,i))}e(t=t?t._modules:{},"Mixins/MultipleLines.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,e){var l=e.defined,c=e.error,u=e.merge,h=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var i=[];return(this.pointArrayMap||[]).forEach(function(t){t!==e&&i.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),i},toYData:function(e){var i=[];return(this.pointArrayMap||[]).forEach(function(t){i.push(e[t])}),i},translate:function(){var n,r=this,t=r.pointArrayMap,o=r.getTranslatedLinesNames();h.prototype.translate.apply(r,arguments),r.points.forEach(function(i){t.forEach(function(t,e){null!==(n=i[t])&&(i[o[e]]=r.yAxis.toPixels(n,!0))})})},drawGraph:function(){var i,n=this,t=n.linesApiNames,r=n.points,o=r.length,a=n.options,e=n.graph,s={options:{gapSize:a.gapSize}},p=[];n.getTranslatedLinesNames(n.pointValKey).forEach(function(t,e){for(p[e]=[];o--;)i=r[o],p[e].push({x:i.x,plotX:i.plotX,plotY:i[t],isNull:!l(i[t])});o=r.length}),t.forEach(function(t,e){p[e]?(n.points=p[e],a[t]?n.options=u(a[t].styles,s):c('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),n.graph=n["graph"+t],h.prototype.drawGraph.call(n),n["graph"+t]=n.graph):c('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),n.points=r,n.options=a,n.graph=e,h.prototype.drawGraph.call(n)}}}),e(t,"Mixins/ReduceArray.js",[],function(){return{minInArray:function(t,i){return t.reduce(function(t,e){return Math.min(t,e[i])},Number.MAX_VALUE)},maxInArray:function(t,i){return t.reduce(function(t,e){return Math.max(t,e[i])},-Number.MAX_VALUE)},getArrayExtremes:function(t,i,n){return t.reduce(function(t,e){return[Math.min(t[0],e[i]),Math.max(t[1],e[n])]},[Number.MAX_VALUE,-Number.MAX_VALUE])}}}),e(t,"Stock/Indicators/StochasticIndicator.js",[t["Core/Series/Series.js"],t["Mixins/MultipleLines.js"],t["Mixins/ReduceArray.js"],t["Core/Utilities.js"]],function(t,e,i,n){var m=n.isArray,r=n.merge,d=t.seriesTypes.sma,y=i.getArrayExtremes;t.seriesType("stochastic","sma",{params:{periods:[14,3]},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'},smoothedLine:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}},r(e,{nameComponents:["periods"],nameBase:"Stochastic",pointArrayMap:["y","smoothed"],parallelArrays:["x","y","smoothed"],pointValKey:"y",linesApiNames:["smoothedLine"],init:function(){d.prototype.init.apply(this,arguments),this.options=r({smoothedLine:{styles:{lineColor:this.color}}},this.options)},getValues:function(t,e){var i=e.periods[0];e=e.periods[1];var n,r=t.xData,o=(t=t.yData)?t.length:0,a=[],s=[],p=[],l=null;if(!(o<i)&&m(t[0])&&4===t[0].length){for(n=i-1;n<o;n++){var c=t.slice(n-i+1,n+1),u=y(c,2,1),h=u[0];c=(c=t[n][3]-h)/(h=u[1]-h)*100,s.push(r[n]),p.push([c,null]),i-1+(e-1)<=n&&(l=(l=d.prototype.getValues.call(this,{xData:s.slice(-e),yData:p.slice(-e)},{period:e})).yData[0]),a.push([r[n],c,l]),p[p.length-1][1]=l}return{values:a,xData:s,yData:p}}}}))}),e(t,"masters/indicators/stochastic.src.js",[],function(){})});