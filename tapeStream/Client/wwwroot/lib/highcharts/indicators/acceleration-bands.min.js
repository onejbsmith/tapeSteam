!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,a,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,a))}e(t=t?t._modules:{},"Mixins/MultipleLines.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,e){var l=e.defined,c=e.error,h=e.merge,u=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var a=[];return(this.pointArrayMap||[]).forEach(function(t){t!==e&&a.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),a},toYData:function(e){var a=[];return(this.pointArrayMap||[]).forEach(function(t){a.push(e[t])}),a},translate:function(){var i,o=this,t=o.pointArrayMap,n=o.getTranslatedLinesNames();u.prototype.translate.apply(o,arguments),o.points.forEach(function(a){t.forEach(function(t,e){null!==(i=a[t])&&(a[n[e]]=o.yAxis.toPixels(i,!0))})})},drawGraph:function(){var a,i=this,t=i.linesApiNames,o=i.points,n=o.length,s=i.options,e=i.graph,r={options:{gapSize:s.gapSize}},p=[];i.getTranslatedLinesNames(i.pointValKey).forEach(function(t,e){for(p[e]=[];n--;)a=o[n],p[e].push({x:a.x,plotX:a.plotX,plotY:a[t],isNull:!l(a[t])});n=o.length}),t.forEach(function(t,e){p[e]?(i.points=p[e],s[t]?i.options=h(s[t].styles,r):c('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+t],u.prototype.drawGraph.call(i),i["graph"+t]=i.graph):c('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=o,i.options=s,i.graph=e,u.prototype.drawGraph.call(i)}}}),e(t,"Stock/Indicators/ABIndicator.js",[t["Core/Series/Series.js"],t["Mixins/MultipleLines.js"],t["Core/Utilities.js"]],function(t,e,a){var m=a.correctFloat;a=a.merge;var g=t.seriesTypes.sma;t.seriesType("abands","sma",{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}},a(e,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Acceleration Bands",nameComponents:["period","factor"],linesApiNames:["topLine","bottomLine"],getValues:function(t,e){var a=e.period,i=e.factor;e=e.index;var o,n,s,r,p,l=t.xData,c=(t=t.yData)?t.length:0,h=[],u=[],d=[],f=[],y=[];if(!(c<a)){for(o=0;o<=c;o++){o<c&&(n=t[o][2],r=t[o][1],s=i,n=m(r-n)/(m(r+n)/2)*1e3*s,h.push(t[o][1]*m(1+2*n)),u.push(t[o][2]*m(1-2*n))),a<=o&&(n=l.slice(o-a,o),p=t.slice(o-a,o),s=g.prototype.getValues.call(this,{xData:n,yData:h.slice(o-a,o)},{period:a}),r=g.prototype.getValues.call(this,{xData:n,yData:u.slice(o-a,o)},{period:a}),n=(p=g.prototype.getValues.call(this,{xData:n,yData:p},{period:a,index:e})).xData[0],s=s.yData[0],r=r.yData[0],p=p.yData[0],d.push([n,s,p,r]),f.push(n),y.push([s,p,r]))}return{values:d,xData:f,yData:y}}}}))}),e(t,"masters/indicators/acceleration-bands.src.js",[],function(){})});