!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/keltner-channels",["highcharts","highcharts/modules/stock"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){function t(e,t,i,o){e.hasOwnProperty(t)||(e[t]=o.apply(null,i))}t(e=e?e._modules:{},"Mixins/MultipleLines.js",[e["Core/Globals.js"],e["Core/Utilities.js"]],function(e,t){var l=t.defined,h=t.error,c=t.merge,u=e.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(t){var i=[];return(this.pointArrayMap||[]).forEach(function(e){e!==t&&i.push("plot"+e.charAt(0).toUpperCase()+e.slice(1))}),i},toYData:function(t){var i=[];return(this.pointArrayMap||[]).forEach(function(e){i.push(t[e])}),i},translate:function(){var o,n=this,e=n.pointArrayMap,r=n.getTranslatedLinesNames();u.prototype.translate.apply(n,arguments),n.points.forEach(function(i){e.forEach(function(e,t){null!==(o=i[e])&&(i[r[t]]=n.yAxis.toPixels(o,!0))})})},drawGraph:function(){var i,o=this,e=o.linesApiNames,n=o.points,r=n.length,a=o.options,t=o.graph,s={options:{gapSize:a.gapSize}},p=[];o.getTranslatedLinesNames(o.pointValKey).forEach(function(e,t){for(p[t]=[];r--;)i=n[r],p[t].push({x:i.x,plotX:i.plotX,plotY:i[e],isNull:!l(i[e])});r=n.length}),e.forEach(function(e,t){p[t]?(o.points=p[t],a[e]?o.options=c(a[e].styles,s):h('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),o.graph=o["graph"+e],u.prototype.drawGraph.call(o),o["graph"+e]=o.graph):h('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=n,o.options=a,o.graph=t,u.prototype.drawGraph.call(o)}}}),t(e,"Stock/Indicators/KeltnerChannelsIndicator.js",[e["Core/Series/Series.js"],e["Mixins/MultipleLines.js"],e["Core/Utilities.js"]],function(e,t,i){var o=e.seriesTypes,m=i.correctFloat,n=i.merge,r=o.sma,f=o.ema,y=o.atr;e.seriesType("keltnerchannels","sma",{params:{period:20,periodATR:10,multiplierATR:2},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"},lineWidth:1},n(t,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Keltner Channels",nameComponents:["period","periodATR","multiplierATR"],linesApiNames:["topLine","bottomLine"],requiredIndicators:["ema","atr"],init:function(){r.prototype.init.apply(this,arguments),this.options=n({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)},getValues:function(e,t){var i=t.period,o=t.periodATR,n=t.multiplierATR,r=(r=e.yData)?r.length:0,a=[];t=f.prototype.getValues(e,{period:i,index:t.index});var s,p=y.prototype.getValues(e,{period:o}),l=[],h=[];if(!(r<i)){for(s=i;s<=r;s++){var c=t.values[s-i],u=p.values[s-o],d=c[0];e=m(c[1]+n*u[1]),u=m(c[1]-n*u[1]),c=c[1],a.push([d,e,c,u]),l.push(d),h.push([e,c,u])}return{values:a,xData:l,yData:h}}}}))}),t(e,"masters/indicators/keltner-channels.src.js",[],function(){})});