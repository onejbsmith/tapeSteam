"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){var e=t?t._modules:{};function a(t,e,a,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,a))}a(e,"Mixins/MultipleLines.js",[e["Core/Globals.js"],e["Core/Utilities.js"]],function(t,e){var c=e.defined,h=e.error,u=e.merge,d=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var a=[];return(this.pointArrayMap||[]).forEach(function(t){t!==e&&a.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),a},toYData:function(e){var a=[];return(this.pointArrayMap||[]).forEach(function(t){a.push(e[t])}),a},translate:function(){var i,o=this,t=o.pointArrayMap,n=o.getTranslatedLinesNames();d.prototype.translate.apply(o,arguments),o.points.forEach(function(a){t.forEach(function(t,e){null!==(i=a[t])&&(a[n[e]]=o.yAxis.toPixels(i,!0))})})},drawGraph:function(){var a,i=this,t=i.pointValKey,e=i.linesApiNames,o=i.points,n=o.length,s=i.options,r=i.graph,p={options:{gapSize:s.gapSize}},l=[];i.getTranslatedLinesNames(t).forEach(function(t,e){for(l[e]=[];n--;)a=o[n],l[e].push({x:a.x,plotX:a.plotX,plotY:a[t],isNull:!c(a[t])});n=o.length}),e.forEach(function(t,e){l[e]?(i.points=l[e],s[t]?i.options=u(s[t].styles,p):h('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+t],d.prototype.drawGraph.call(i),i["graph"+t]=i.graph):h('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=o,i.options=s,i.graph=r,d.prototype.drawGraph.call(i)}}}),a(e,"Stock/Indicators/ABIndicator.js",[e["Core/Series/Series.js"],e["Mixins/MultipleLines.js"],e["Core/Utilities.js"]],function(t,e,a){var N=a.correctFloat,i=a.merge,E=t.seriesTypes.sma;t.seriesType("abands","sma",{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}},i(e,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Acceleration Bands",nameComponents:["period","factor"],linesApiNames:["topLine","bottomLine"],getValues:function(t,e){var a,i,o,n,s,r,p,l,c,h,u,d,f,y,m=e.period,g=e.factor,x=e.index,D=t.xData,A=t.yData,v=A?A.length:0,M=[],b=[],j=[],L=[],C=[];if(!(v<m)){for(u=0;u<=v;u++)u<v&&(d=A[u][2],f=A[u][1],y=g,s=N(f-d)/(N(f+d)/2)*1e3*y,M.push(A[u][1]*N(1+2*s)),b.push(A[u][2]*N(1-2*s))),m<=u&&(c=D.slice(u-m,u),h=A.slice(u-m,u),p=E.prototype.getValues.call(this,{xData:c,yData:M.slice(u-m,u)},{period:m}),l=E.prototype.getValues.call(this,{xData:c,yData:b.slice(u-m,u)},{period:m}),n=(r=E.prototype.getValues.call(this,{xData:c,yData:h},{period:m,index:x})).xData[0],i=p.yData[0],o=l.yData[0],a=r.yData[0],j.push([n,i,a,o]),L.push(n),C.push([i,a,o]));return{values:j,xData:L,yData:C}}}}))}),a(e,"masters/indicators/acceleration-bands.src.js",[],function(){})});