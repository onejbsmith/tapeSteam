"use strict";!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/keltner-channels",["highcharts","highcharts/modules/stock"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){var t=e?e._modules:{};function i(e,t,i,o){e.hasOwnProperty(t)||(e[t]=o.apply(null,i))}i(t,"Mixins/MultipleLines.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(e,t){var h=t.defined,c=t.error,u=t.merge,d=e.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(t){var i=[];return(this.pointArrayMap||[]).forEach(function(e){e!==t&&i.push("plot"+e.charAt(0).toUpperCase()+e.slice(1))}),i},toYData:function(t){var i=[];return(this.pointArrayMap||[]).forEach(function(e){i.push(t[e])}),i},translate:function(){var o,n=this,e=n.pointArrayMap,r=n.getTranslatedLinesNames();d.prototype.translate.apply(n,arguments),n.points.forEach(function(i){e.forEach(function(e,t){null!==(o=i[e])&&(i[r[t]]=n.yAxis.toPixels(o,!0))})})},drawGraph:function(){var i,o=this,e=o.pointValKey,t=o.linesApiNames,n=o.points,r=n.length,a=o.options,s=o.graph,p={options:{gapSize:a.gapSize}},l=[];o.getTranslatedLinesNames(e).forEach(function(e,t){for(l[t]=[];r--;)i=n[r],l[t].push({x:i.x,plotX:i.plotX,plotY:i[e],isNull:!h(i[e])});r=n.length}),t.forEach(function(e,t){l[t]?(o.points=l[t],a[e]?o.options=u(a[e].styles,p):c('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),o.graph=o["graph"+e],d.prototype.drawGraph.call(o),o["graph"+e]=o.graph):c('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=n,o.options=a,o.graph=s,d.prototype.drawGraph.call(o)}}}),i(t,"Stock/Indicators/KeltnerChannelsIndicator.js",[t["Core/Series/Series.js"],t["Mixins/MultipleLines.js"],t["Core/Utilities.js"]],function(e,t,i){var o=e.seriesTypes,C=i.correctFloat,n=i.merge,r=o.sma,b=o.ema,T=o.atr;e.seriesType("keltnerchannels","sma",{params:{period:20,periodATR:10,multiplierATR:2},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"},lineWidth:1},n(t,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Keltner Channels",nameComponents:["period","periodATR","multiplierATR"],linesApiNames:["topLine","bottomLine"],requiredIndicators:["ema","atr"],init:function(){r.prototype.init.apply(this,arguments),this.options=n({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)},getValues:function(e,t){var i,o,n,r,a,s,p,l=t.period,h=t.periodATR,c=t.multiplierATR,u=t.index,d=e.yData,m=d?d.length:0,f=[],y=b.prototype.getValues(e,{period:l,index:u}),g=T.prototype.getValues(e,{period:h}),A=[],v=[];if(!(m<l)){for(p=l;p<=m;p++)a=y.values[p-l],s=g.values[p-h],r=a[0],o=C(a[1]+c*s[1]),n=C(a[1]-c*s[1]),i=a[1],f.push([r,o,i,n]),A.push(r),v.push([o,i,n]);return{values:f,xData:A,yData:v}}}}))}),i(t,"masters/indicators/keltner-channels.src.js",[],function(){})});