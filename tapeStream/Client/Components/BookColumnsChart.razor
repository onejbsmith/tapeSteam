@*<h3>BookColumnsChart</h3>*@
@using tapeStream.Client.Data
@using tapeStream.Shared.Data
@using tapeStream.Shared

<div style="margin-bottom:10px;font-weight:800;width:86%;zoom:0.8">
    <span>@TDAChart.LongDateString</span>

    <div>

        <RadzenAccordion Style="background-color:transparent;width:100%">
            <Items>
                <RadzenAccordionItem Text="@title" Icon="account_balance_wallet" Style="width:100%">

                    <RadzenSlider Min="0" Max="60" @bind-Value=@seconds Style="width:80%" /> <label> &nbsp;@seconds &nbsp;Seconds</label>

                </RadzenAccordionItem>
            </Items>
        </RadzenAccordion>



        @*@code {
                bool showValue = true;
                double value = 100;
                IEnumerable<GaugeTickPosition> tickPositions = Enum.GetValues(typeof(GaugeTickPosition)).Cast<GaugeTickPosition>();
                GaugeTickPosition tickPosition = GaugeTickPosition.Inside;
            }*@
    </div>
    <div class="ratioStats">
        <tapeStream.Client.Components.HighCharts.Stats bookData="@bookData" />
    </div>
    <RadzenChart @ref="myChart">
        <RadzenColumnSeries Title="Bidders&nbsp;&nbsp;" Data="@bidData" CategoryProperty="Price" LineType="LineType.Solid"
                            ValueProperty="Size" Fill="@CONSTANTS.bidsColor" />
        <RadzenColumnSeries Title="Sellers&nbsp;&nbsp;" Data="@salesAtBidData" CategoryProperty="Price" Fill="@CONSTANTS.sellsColor"
                            ValueProperty="Size" />        <RadzenCategoryAxis FormatString="{0:n2}" StrokeWidth="6" />
        <RadzenColumnSeries Title="Buyers&nbsp;&nbsp;" Data="@salesAtAskData" CategoryProperty="Price" Fill="@CONSTANTS.buysColor"
                            ValueProperty="Size" />        <RadzenCategoryAxis FormatString="{0:n2}" StrokeWidth="6" />
        <RadzenColumnSeries Title="Askers" Data="@askData" CategoryProperty="Price" Fill="@CONSTANTS.asksColor"
                            ValueProperty="Size" />


        <RadzenLegend Visible="@true" Position="LegendPosition.Bottom" />
        <RadzenValueAxis Max=5000>
            <RadzenGridLines Visible="true" />
        </RadzenValueAxis>
        <RadzenCategoryAxis Min=0 Max=1000 Step="5" />


        <RadzenValueAxis>
            <RadzenAxisTitle Text="Size" />
        </RadzenValueAxis>
        <RadzenCategoryAxis>
            <RadzenAxisTitle Text="Price" />
        </RadzenCategoryAxis>
        <RadzenValueAxis FormatString="{0:n0}" />
    </RadzenChart>



</div>

<style>

    /*    span {
        display: inline-flex;
    }*/

    .ratioStats > .mat-layout-grid > .mat-layout-grid-inner {
        display: grid;
        margin: 0;
        grid-gap: 4px;
        /* grid-gap: var(--mdc-layout-grid-gutter-desktop, 4px); */
        grid-template-columns: repeat(12, minmax(0, .072fr));
    }
</style>
@*@if (!isPrintsSize)
    {
    <div style="white-space: nowrap;">
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[0].Revenue.ToString("n0"))' title="Under Bid" /></BSBadge>
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[1].Revenue.ToString("n0"))' title="At Bid" /></BSBadge>
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[2].Revenue.ToString("n0"))' title="Between Bid and Ask" /></BSBadge>
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[3].Revenue.ToString("n0"))' title="At Ask" /></BSBadge>
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[4].Revenue.ToString("n0"))' title="Over Ask" /></BSBadge>
    </div>
    }*@


@code {

    [Parameter]
    public string symbol { get; set; }






}
