@*<h3>BookColumnsChart</h3>*@
@using tapeStream.Client.Data;

<div style="margin-bottom:10px;font-weight:800">
    <span>@timeOfDay</span>
    <RadzenChart @ref="myChart">
        <RadzenColumnSeries Title="Bids" Data="@bidData" CategoryProperty="Price"
                            ValueProperty="Size" />
        <RadzenColumnSeries Title="Asks" Data="@askData" CategoryProperty="Price"
                            ValueProperty="Size" />
        <RadzenCategoryAxis FormatString="{0:n2}" StrokeWidth="4" />
        @*<RadzenLegend Visible="false" />

        <RadzenValueAxis  FormatString="{0:C} />*@
    </RadzenChart>
</div>

@*@if (!isPrintsSize)
    {
    <div style="white-space: nowrap;">
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[0].Revenue.ToString("n0"))' title="Under Bid" /></BSBadge>
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[1].Revenue.ToString("n0"))' title="At Bid" /></BSBadge>
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[2].Revenue.ToString("n0"))' title="Between Bid and Ask" /></BSBadge>
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[3].Revenue.ToString("n0"))' title="At Ask" /></BSBadge>
        <BSBadge class="alert-dark"><RadzenLabel Text='@(printsData[4].Revenue.ToString("n0"))' title="Over Ask" /></BSBadge>
    </div>
    }*@


@code {
    RadzenChart myChart;

    public DateTime timeOfDay = DateTime.Now;

    [Parameter]
    public string symbol { get; set; }

    [Parameter]
    public int seconds { get; set; }

    [Parameter]
    public bool isPrintsSize { get; set; }

    [Parameter]
    public int moduloBook { get; set; }



}
